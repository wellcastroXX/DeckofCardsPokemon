import { Directive, HostBinding, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./tabs.base";
import * as i2 from "./tab-item.directive";
import * as i3 from "../core/utils";
export class IgxTabHeaderDirective {
    /** @hidden */
    constructor(tabs, tab, elementRef, platform) {
        this.tabs = tabs;
        this.tab = tab;
        this.elementRef = elementRef;
        this.platform = platform;
        /** @hidden */
        this.role = 'tab';
    }
    /** @hidden */
    get tabIndex() {
        return this.tab.selected ? 0 : -1;
    }
    /** @hidden */
    get ariaSelected() {
        return this.tab.selected;
    }
    /** @hidden */
    get ariaDisabled() {
        return this.tab.disabled;
    }
    /** @hidden */
    onClick() {
        if (this.tab.panelComponent) {
            this.tabs.selectTab(this.tab, true);
        }
    }
    /** @hidden */
    get nativeElement() {
        return this.elementRef.nativeElement;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxTabHeaderDirective, deps: [{ token: i1.IgxTabsBase }, { token: i2.IgxTabItemDirective }, { token: i0.ElementRef }, { token: i3.PlatformUtil }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: IgxTabHeaderDirective, host: { listeners: { "click": "onClick()" }, properties: { "attr.role": "this.role", "attr.tabindex": "this.tabIndex", "attr.aria-selected": "this.ariaSelected", "attr.aria-disabled": "this.ariaDisabled" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxTabHeaderDirective, decorators: [{
            type: Directive
        }], ctorParameters: () => [{ type: i1.IgxTabsBase }, { type: i2.IgxTabItemDirective }, { type: i0.ElementRef }, { type: i3.PlatformUtil }], propDecorators: { role: [{
                type: HostBinding,
                args: ['attr.role']
            }], tabIndex: [{
                type: HostBinding,
                args: ['attr.tabindex']
            }], ariaSelected: [{
                type: HostBinding,
                args: ['attr.aria-selected']
            }], ariaDisabled: [{
                type: HostBinding,
                args: ['attr.aria-disabled']
            }], onClick: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWhlYWRlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvdGFicy90YWItaGVhZGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFjLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBTWpGLE1BQU0sT0FBZ0IscUJBQXFCO0lBTXZDLGNBQWM7SUFDZCxZQUNjLElBQWlCLEVBQ3BCLEdBQXdCLEVBQ3ZCLFVBQW1DLEVBQ2pDLFFBQXNCO1FBSHRCLFNBQUksR0FBSixJQUFJLENBQWE7UUFDcEIsUUFBRyxHQUFILEdBQUcsQ0FBcUI7UUFDdkIsZUFBVSxHQUFWLFVBQVUsQ0FBeUI7UUFDakMsYUFBUSxHQUFSLFFBQVEsQ0FBYztRQVRwQyxjQUFjO1FBRVAsU0FBSSxHQUFHLEtBQUssQ0FBQztJQVFoQixDQUFDO0lBRUwsY0FBYztJQUNkLElBQ1csUUFBUTtRQUNmLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELGNBQWM7SUFDZCxJQUNXLFlBQVk7UUFDbkIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztJQUM3QixDQUFDO0lBRUQsY0FBYztJQUNkLElBQ1csWUFBWTtRQUNuQixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFFRCxjQUFjO0lBRVAsT0FBTztRQUNWLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUU7WUFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUN2QztJQUNMLENBQUM7SUFFRCxjQUFjO0lBQ2QsSUFBVyxhQUFhO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7SUFDekMsQ0FBQzs4R0EzQ2lCLHFCQUFxQjtrR0FBckIscUJBQXFCOzsyRkFBckIscUJBQXFCO2tCQUQxQyxTQUFTO3NLQUtDLElBQUk7c0JBRFYsV0FBVzt1QkFBQyxXQUFXO2dCQWFiLFFBQVE7c0JBRGxCLFdBQVc7dUJBQUMsZUFBZTtnQkFPakIsWUFBWTtzQkFEdEIsV0FBVzt1QkFBQyxvQkFBb0I7Z0JBT3RCLFlBQVk7c0JBRHRCLFdBQVc7dUJBQUMsb0JBQW9CO2dCQU8xQixPQUFPO3NCQURiLFlBQVk7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBIb3N0QmluZGluZywgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQbGF0Zm9ybVV0aWwgfSBmcm9tICcuLi9jb3JlL3V0aWxzJztcbmltcG9ydCB7IElneFRhYkl0ZW1EaXJlY3RpdmUgfSBmcm9tICcuL3RhYi1pdGVtLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hUYWJIZWFkZXJCYXNlLCBJZ3hUYWJzQmFzZSB9IGZyb20gJy4vdGFicy5iYXNlJztcblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSWd4VGFiSGVhZGVyRGlyZWN0aXZlIGltcGxlbWVudHMgSWd4VGFiSGVhZGVyQmFzZSB7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBIb3N0QmluZGluZygnYXR0ci5yb2xlJylcbiAgICBwdWJsaWMgcm9sZSA9ICd0YWInO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJvdGVjdGVkIHRhYnM6IElneFRhYnNCYXNlLFxuICAgICAgICBwdWJsaWMgdGFiOiBJZ3hUYWJJdGVtRGlyZWN0aXZlLFxuICAgICAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICBwcm90ZWN0ZWQgcGxhdGZvcm06IFBsYXRmb3JtVXRpbFxuICAgICkgeyB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBIb3N0QmluZGluZygnYXR0ci50YWJpbmRleCcpXG4gICAgcHVibGljIGdldCB0YWJJbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFiLnNlbGVjdGVkID8gMCA6IC0xO1xuICAgIH1cblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmFyaWEtc2VsZWN0ZWQnKVxuICAgIHB1YmxpYyBnZXQgYXJpYVNlbGVjdGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50YWIuc2VsZWN0ZWQ7XG4gICAgfVxuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS1kaXNhYmxlZCcpXG4gICAgcHVibGljIGdldCBhcmlhRGlzYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRhYi5kaXNhYmxlZDtcbiAgICB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgICBwdWJsaWMgb25DbGljaygpIHtcbiAgICAgICAgaWYgKHRoaXMudGFiLnBhbmVsQ29tcG9uZW50KSB7XG4gICAgICAgICAgICB0aGlzLnRhYnMuc2VsZWN0VGFiKHRoaXMudGFiLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgcHVibGljIGdldCBuYXRpdmVFbGVtZW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxufVxuIl19