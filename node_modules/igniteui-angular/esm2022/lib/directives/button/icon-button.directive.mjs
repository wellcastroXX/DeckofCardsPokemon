import { Directive, HostBinding, Input } from '@angular/core';
import { IgxBaseButtonType, IgxButtonBaseDirective } from './button-base';
import * as i0 from "@angular/core";
/**
 * The IgxIconButtonDirective provides a way to use an icon as a fully functional button.
 *
 * @example
 * ```html
 * <button type="button" igxIconButton="outlined">
 *      <igx-icon>home</igx-icon>
 * </button>
 * ```
 */
export class IgxIconButtonDirective extends IgxButtonBaseDirective {
    constructor() {
        super(...arguments);
        /**
         * @hidden
         * @internal
         */
        this._cssClass = 'igx-icon-button';
    }
    /**
     * Sets the type of the icon button.
     *
     * @example
     * ```html
     * <button type="button" igxIconButton="flat"></button>
     * ```
     */
    set type(type) {
        const t = type ? type : IgxBaseButtonType.Contained;
        if (this._type !== t) {
            this._type = t;
        }
    }
    /**
     * @hidden
     * @internal
     */
    get flat() {
        return this._type === IgxBaseButtonType.Flat;
    }
    /**
     * @hidden
     * @internal
     */
    get contained() {
        return this._type === IgxBaseButtonType.Contained;
    }
    /**
     * @hidden
     * @internal
     */
    get outlined() {
        return this._type === IgxBaseButtonType.Outlined;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxIconButtonDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: IgxIconButtonDirective, isStandalone: true, selector: "[igxIconButton]", inputs: { type: ["igxIconButton", "type"] }, host: { properties: { "class.igx-icon-button": "this._cssClass", "class.igx-icon-button--flat": "this.flat", "class.igx-icon-button--contained": "this.contained", "class.igx-icon-button--outlined": "this.outlined" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxIconButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxIconButton]',
                    standalone: true
                }]
        }], propDecorators: { _cssClass: [{
                type: HostBinding,
                args: ['class.igx-icon-button']
            }], type: [{
                type: Input,
                args: ['igxIconButton']
            }], flat: [{
                type: HostBinding,
                args: ['class.igx-icon-button--flat']
            }], contained: [{
                type: HostBinding,
                args: ['class.igx-icon-button--contained']
            }], outlined: [{
                type: HostBinding,
                args: ['class.igx-icon-button--outlined']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1idXR0b24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2RpcmVjdGl2ZXMvYnV0dG9uL2ljb24tYnV0dG9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLHNCQUFzQixFQUFFLE1BQU0sZUFBZSxDQUFDOztBQU8xRTs7Ozs7Ozs7O0dBU0c7QUFLSCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsc0JBQXNCO0lBSmxFOztRQU9JOzs7V0FHRztRQUVLLGNBQVMsR0FBRyxpQkFBaUIsQ0FBQztLQWtEekM7SUExQ0c7Ozs7Ozs7T0FPRztJQUNILElBQ1csSUFBSSxDQUFDLElBQXVCO1FBQ25DLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUM7UUFDcEQsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsRUFBRTtZQUNsQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUNsQjtJQUNMLENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUNXLElBQUk7UUFDWCxPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssaUJBQWlCLENBQUMsSUFBSSxDQUFDO0lBQ2pELENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUNXLFNBQVM7UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLGlCQUFpQixDQUFDLFNBQVMsQ0FBQztJQUN0RCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFDVyxRQUFRO1FBQ2YsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLGlCQUFpQixDQUFDLFFBQVEsQ0FBQztJQUNyRCxDQUFDOzhHQXpEUSxzQkFBc0I7a0dBQXRCLHNCQUFzQjs7MkZBQXRCLHNCQUFzQjtrQkFKbEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixVQUFVLEVBQUUsSUFBSTtpQkFDbkI7OEJBU1csU0FBUztzQkFEaEIsV0FBVzt1QkFBQyx1QkFBdUI7Z0JBa0J6QixJQUFJO3NCQURkLEtBQUs7dUJBQUMsZUFBZTtnQkFhWCxJQUFJO3NCQURkLFdBQVc7dUJBQUMsNkJBQTZCO2dCQVUvQixTQUFTO3NCQURuQixXQUFXO3VCQUFDLGtDQUFrQztnQkFVcEMsUUFBUTtzQkFEbEIsV0FBVzt1QkFBQyxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4QmFzZUJ1dHRvblR5cGUsIElneEJ1dHRvbkJhc2VEaXJlY3RpdmUgfSBmcm9tICcuL2J1dHRvbi1iYXNlJztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHRoZSBJY29uIEJ1dHRvbiB0eXBlLlxuICovXG5leHBvcnQgdHlwZSBJZ3hJY29uQnV0dG9uVHlwZSA9IHR5cGVvZiBJZ3hCYXNlQnV0dG9uVHlwZVtrZXlvZiB0eXBlb2YgSWd4QmFzZUJ1dHRvblR5cGVdO1xuXG4vKipcbiAqIFRoZSBJZ3hJY29uQnV0dG9uRGlyZWN0aXZlIHByb3ZpZGVzIGEgd2F5IHRvIHVzZSBhbiBpY29uIGFzIGEgZnVsbHkgZnVuY3Rpb25hbCBidXR0b24uXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWxcbiAqIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGlneEljb25CdXR0b249XCJvdXRsaW5lZFwiPlxuICogICAgICA8aWd4LWljb24+aG9tZTwvaWd4LWljb24+XG4gKiA8L2J1dHRvbj5cbiAqIGBgYFxuICovXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hJY29uQnV0dG9uXScsXG4gICAgc3RhbmRhbG9uZTogdHJ1ZVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hJY29uQnV0dG9uRGlyZWN0aXZlIGV4dGVuZHMgSWd4QnV0dG9uQmFzZURpcmVjdGl2ZSB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfdHlwZTogSWd4SWNvbkJ1dHRvblR5cGUgfCAnJztcblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1pY29uLWJ1dHRvbicpXG4gICAgcHJpdmF0ZSBfY3NzQ2xhc3MgPSAnaWd4LWljb24tYnV0dG9uJztcblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBwcml2YXRlIF90eXBlOiBJZ3hJY29uQnV0dG9uVHlwZTtcblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHR5cGUgb2YgdGhlIGljb24gYnV0dG9uLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBodG1sXG4gICAgICogPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgaWd4SWNvbkJ1dHRvbj1cImZsYXRcIj48L2J1dHRvbj5cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBASW5wdXQoJ2lneEljb25CdXR0b24nKVxuICAgIHB1YmxpYyBzZXQgdHlwZSh0eXBlOiBJZ3hJY29uQnV0dG9uVHlwZSkge1xuICAgICAgICBjb25zdCB0ID0gdHlwZSA/IHR5cGUgOiBJZ3hCYXNlQnV0dG9uVHlwZS5Db250YWluZWQ7XG4gICAgICAgIGlmICh0aGlzLl90eXBlICE9PSB0KSB7XG4gICAgICAgICAgICB0aGlzLl90eXBlID0gdDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1pY29uLWJ1dHRvbi0tZmxhdCcpXG4gICAgcHVibGljIGdldCBmbGF0KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fdHlwZSA9PT0gSWd4QmFzZUJ1dHRvblR5cGUuRmxhdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtaWNvbi1idXR0b24tLWNvbnRhaW5lZCcpXG4gICAgcHVibGljIGdldCBjb250YWluZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl90eXBlID09PSBJZ3hCYXNlQnV0dG9uVHlwZS5Db250YWluZWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWljb24tYnV0dG9uLS1vdXRsaW5lZCcpXG4gICAgcHVibGljIGdldCBvdXRsaW5lZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3R5cGUgPT09IElneEJhc2VCdXR0b25UeXBlLk91dGxpbmVkO1xuICAgIH1cbn1cbiJdfQ==