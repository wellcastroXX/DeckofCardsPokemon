import { Component, Input, HostBinding, booleanAttribute } from '@angular/core';
import * as i0 from "@angular/core";
let NEXT_ID = 0;
/**
 * The `<igx-drop-down-item>` is a container intended for row items in
 * a `<igx-drop-down>` container.
 */
export class IgxDropDownGroupComponent {
    constructor() {
        /**
         * @hidden @internal
         */
        this.role = 'group';
        /** @hidden @internal */
        this.groupClass = true;
        /**
         * Sets/gets if the item group is disabled
         *
         * ```typescript
         * const myDropDownGroup: IgxDropDownGroupComponent = this.dropdownGroup;
         * // get
         * ...
         * const groupState: boolean = myDropDownGroup.disabled;
         * ...
         * //set
         * ...
         * myDropDownGroup,disabled = false;
         * ...
         * ```
         *
         * ```html
         * <igx-drop-down-item-group [label]="'My Items'" [disabled]="true">
         *     <igx-drop-down-item *ngFor="let item of items[index]" [value]="item.value">
         *         {{ item.text }}
         *     </igx-drop-down-item>
         * </igx-drop-down-item-group>
         * ```
         *
         * **NOTE:** All items inside of a disabled drop down group will be treated as disabled
         */
        this.disabled = false;
        this._id = NEXT_ID++;
    }
    /**
     * @hidden @internal
     */
    get labelId() {
        return `igx-item-group-label-${this._id}`;
    }
    get labelledBy() {
        return this.labelId;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxDropDownGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "16.1.0", version: "17.2.4", type: IgxDropDownGroupComponent, isStandalone: true, selector: "igx-drop-down-item-group", inputs: { disabled: ["disabled", "disabled", booleanAttribute], label: "label" }, host: { properties: { "attr.aria-labelledby": "this.labelledBy", "attr.role": "this.role", "class.igx-drop-down__group": "this.groupClass", "attr.aria-disabled": "this.disabled", "class.igx-drop-down__group--disabled": "this.disabled" } }, ngImport: i0, template: `
        <label id="{{labelId}}">{{ label }}</label>
        <ng-content select="igx-drop-down-item"></ng-content>
    `, isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxDropDownGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-drop-down-item-group',
                    template: `
        <label id="{{labelId}}">{{ label }}</label>
        <ng-content select="igx-drop-down-item"></ng-content>
    `,
                    standalone: true
                }]
        }], propDecorators: { labelledBy: [{
                type: HostBinding,
                args: [`attr.aria-labelledby`]
            }], role: [{
                type: HostBinding,
                args: ['attr.role']
            }], groupClass: [{
                type: HostBinding,
                args: ['class.igx-drop-down__group']
            }], disabled: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }, {
                type: HostBinding,
                args: [`attr.aria-disabled`]
            }, {
                type: HostBinding,
                args: ['class.igx-drop-down__group--disabled']
            }], label: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcC1kb3duLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9kcm9wLWRvd24vZHJvcC1kb3duLWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRWhGLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztBQUNoQjs7O0dBR0c7QUFTSCxNQUFNLE9BQU8seUJBQXlCO0lBUnRDO1FBcUJJOztXQUVHO1FBRUksU0FBSSxHQUFHLE9BQU8sQ0FBQztRQUV0Qix3QkFBd0I7UUFFakIsZUFBVSxHQUFHLElBQUksQ0FBQztRQUN6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1dBd0JHO1FBSUksYUFBUSxHQUFHLEtBQUssQ0FBQztRQTBCaEIsUUFBRyxHQUFHLE9BQU8sRUFBRSxDQUFDO0tBQzNCO0lBNUVHOztPQUVHO0lBQ0gsSUFBVyxPQUFPO1FBQ2QsT0FBTyx3QkFBd0IsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUNXLFVBQVU7UUFDakIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hCLENBQUM7OEdBWFEseUJBQXlCO2tHQUF6Qix5QkFBeUIseUdBK0NkLGdCQUFnQiw2UkFyRDFCOzs7S0FHVDs7MkZBR1EseUJBQXlCO2tCQVJyQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSwwQkFBMEI7b0JBQ3BDLFFBQVEsRUFBRTs7O0tBR1Q7b0JBQ0QsVUFBVSxFQUFFLElBQUk7aUJBQ25COzhCQVVjLFVBQVU7c0JBRHBCLFdBQVc7dUJBQUMsc0JBQXNCO2dCQVM1QixJQUFJO3NCQURWLFdBQVc7dUJBQUMsV0FBVztnQkFLakIsVUFBVTtzQkFEaEIsV0FBVzt1QkFBQyw0QkFBNEI7Z0JBOEJsQyxRQUFRO3NCQUhkLEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7O3NCQUNyQyxXQUFXO3VCQUFDLG9CQUFvQjs7c0JBQ2hDLFdBQVc7dUJBQUMsc0NBQXNDO2dCQXlCNUMsS0FBSztzQkFEWCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgSG9zdEJpbmRpbmcsIGJvb2xlYW5BdHRyaWJ1dGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxubGV0IE5FWFRfSUQgPSAwO1xuLyoqXG4gKiBUaGUgYDxpZ3gtZHJvcC1kb3duLWl0ZW0+YCBpcyBhIGNvbnRhaW5lciBpbnRlbmRlZCBmb3Igcm93IGl0ZW1zIGluXG4gKiBhIGA8aWd4LWRyb3AtZG93bj5gIGNvbnRhaW5lci5cbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdpZ3gtZHJvcC1kb3duLWl0ZW0tZ3JvdXAnLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxsYWJlbCBpZD1cInt7bGFiZWxJZH19XCI+e3sgbGFiZWwgfX08L2xhYmVsPlxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJpZ3gtZHJvcC1kb3duLWl0ZW1cIj48L25nLWNvbnRlbnQ+XG4gICAgYCxcbiAgICBzdGFuZGFsb25lOiB0cnVlXG59KVxuZXhwb3J0IGNsYXNzIElneERyb3BEb3duR3JvdXBDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW4gQGludGVybmFsXG4gICAgICovXG4gICAgcHVibGljIGdldCBsYWJlbElkKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgaWd4LWl0ZW0tZ3JvdXAtbGFiZWwtJHt0aGlzLl9pZH1gO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZyhgYXR0ci5hcmlhLWxhYmVsbGVkYnlgKVxuICAgIHB1YmxpYyBnZXQgbGFiZWxsZWRCeSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5sYWJlbElkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW4gQGludGVybmFsXG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLnJvbGUnKVxuICAgIHB1YmxpYyByb2xlID0gJ2dyb3VwJztcblxuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWRyb3AtZG93bl9fZ3JvdXAnKVxuICAgIHB1YmxpYyBncm91cENsYXNzID0gdHJ1ZTtcbiAgICAvKipcbiAgICAgKiBTZXRzL2dldHMgaWYgdGhlIGl0ZW0gZ3JvdXAgaXMgZGlzYWJsZWRcbiAgICAgKlxuICAgICAqIGBgYHR5cGVzY3JpcHRcbiAgICAgKiBjb25zdCBteURyb3BEb3duR3JvdXA6IElneERyb3BEb3duR3JvdXBDb21wb25lbnQgPSB0aGlzLmRyb3Bkb3duR3JvdXA7XG4gICAgICogLy8gZ2V0XG4gICAgICogLi4uXG4gICAgICogY29uc3QgZ3JvdXBTdGF0ZTogYm9vbGVhbiA9IG15RHJvcERvd25Hcm91cC5kaXNhYmxlZDtcbiAgICAgKiAuLi5cbiAgICAgKiAvL3NldFxuICAgICAqIC4uLlxuICAgICAqIG15RHJvcERvd25Hcm91cCxkaXNhYmxlZCA9IGZhbHNlO1xuICAgICAqIC4uLlxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogYGBgaHRtbFxuICAgICAqIDxpZ3gtZHJvcC1kb3duLWl0ZW0tZ3JvdXAgW2xhYmVsXT1cIidNeSBJdGVtcydcIiBbZGlzYWJsZWRdPVwidHJ1ZVwiPlxuICAgICAqICAgICA8aWd4LWRyb3AtZG93bi1pdGVtICpuZ0Zvcj1cImxldCBpdGVtIG9mIGl0ZW1zW2luZGV4XVwiIFt2YWx1ZV09XCJpdGVtLnZhbHVlXCI+XG4gICAgICogICAgICAgICB7eyBpdGVtLnRleHQgfX1cbiAgICAgKiAgICAgPC9pZ3gtZHJvcC1kb3duLWl0ZW0+XG4gICAgICogPC9pZ3gtZHJvcC1kb3duLWl0ZW0tZ3JvdXA+XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiAqKk5PVEU6KiogQWxsIGl0ZW1zIGluc2lkZSBvZiBhIGRpc2FibGVkIGRyb3AgZG93biBncm91cCB3aWxsIGJlIHRyZWF0ZWQgYXMgZGlzYWJsZWRcbiAgICAgKi9cbiAgICBASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSlcbiAgICBASG9zdEJpbmRpbmcoYGF0dHIuYXJpYS1kaXNhYmxlZGApXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZHJvcC1kb3duX19ncm91cC0tZGlzYWJsZWQnKVxuICAgIHB1YmxpYyBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogU2V0cy9nZXRzIHRoZSBsYWJlbCBvZiB0aGUgaXRlbSBncm91cFxuICAgICAqXG4gICAgICogYGBgdHlwZXNjcmlwdFxuICAgICAqIGNvbnN0IG15RHJvcERvd25Hcm91cDogSWd4RHJvcERvd25Hcm91cENvbXBvbmVudCA9IHRoaXMuZHJvcGRvd25Hcm91cDtcbiAgICAgKiAvLyBnZXRcbiAgICAgKiAuLi5cbiAgICAgKiBjb25zdCBteUxhYmVsOiBzdHJpbmcgPSBteURyb3BEb3duR3JvdXAubGFiZWw7XG4gICAgICogLi4uXG4gICAgICogLy8gc2V0XG4gICAgICogLi4uXG4gICAgICogbXlEcm9wRG93bkdyb3VwLmxhYmVsID0gJ015IE5ldyBMYWJlbCc7XG4gICAgICogLi4uXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBgYGBodG1sXG4gICAgICogPGlneC1kcm9wLWRvd24taXRlbS1ncm91cCBbbGFiZWxdPVwiJ015IG5ldyBMYWJlbCdcIj5cbiAgICAgKiAgICAgIC4uLlxuICAgICAqIDwvaWd4LWRyb3AtZG93bi1pdGVtLWdyb3VwPlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGxhYmVsOiBzdHJpbmc7XG5cbiAgICBwcml2YXRlIF9pZCA9IE5FWFRfSUQrKztcbn1cbiJdfQ==