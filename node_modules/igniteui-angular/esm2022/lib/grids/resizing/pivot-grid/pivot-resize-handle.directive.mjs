import { Directive, Input } from '@angular/core';
import { IgxResizeHandleDirective } from '../resize-handle.directive';
import * as i0 from "@angular/core";
import * as i1 from "./pivot-resizing.service";
/**
 * @hidden
 * @internal
 */
export class IgxPivotResizeHandleDirective extends IgxResizeHandleDirective {
    /**
     * @hidden
     */
    set pivotColumn(value) {
        this.column = value;
    }
    get pivotColumn() {
        return this.column;
    }
    constructor(zone, element, colResizingService) {
        super(zone, element, colResizingService);
        this.colResizingService = colResizingService;
    }
    /**
     * @hidden
     */
    onDoubleClick() {
        this._dblClick = true;
        this.initResizeService();
        this.rowHeaderGroup.grid.autoSizeRowDimension(this.rowHeaderGroup.parent.rootDimension);
    }
    /**
     * @hidden
     */
    initResizeService(event = null) {
        super.initResizeService(event);
        this.colResizingService.rowHeaderGroup = this.rowHeaderGroup;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxPivotResizeHandleDirective, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.IgxPivotColumnResizingService }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: IgxPivotResizeHandleDirective, isStandalone: true, selector: "[igxPivotResizeHandle]", inputs: { pivotColumn: ["igxPivotResizeHandle", "pivotColumn"], rowHeaderGroup: ["igxPivotResizeHandleHeader", "rowHeaderGroup"] }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxPivotResizeHandleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxPivotResizeHandle]',
                    standalone: true
                }]
        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.IgxPivotColumnResizingService }], propDecorators: { pivotColumn: [{
                type: Input,
                args: ['igxPivotResizeHandle']
            }], rowHeaderGroup: [{
                type: Input,
                args: ['igxPivotResizeHandleHeader']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGl2b3QtcmVzaXplLWhhbmRsZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvcmVzaXppbmcvcGl2b3QtZ3JpZC9waXZvdC1yZXNpemUtaGFuZGxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUVULEtBQUssRUFFUixNQUFNLGVBQWUsQ0FBQztBQUl2QixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7O0FBRXRFOzs7R0FHRztBQUtILE1BQU0sT0FBTyw2QkFBOEIsU0FBUSx3QkFBd0I7SUFFdkU7O09BRUc7SUFDSCxJQUNXLFdBQVcsQ0FBQyxLQUFpQjtRQUNwQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBVyxXQUFXO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBUUQsWUFBWSxJQUFZLEVBQ3BCLE9BQW1CLEVBQ0gsa0JBQWlEO1FBQ2pFLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFEekIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUErQjtJQUVyRSxDQUFDO0lBRUQ7O09BRUc7SUFDYSxhQUFhO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzVGLENBQUM7SUFFRDs7T0FFRztJQUNnQixpQkFBaUIsQ0FBQyxLQUFLLEdBQUcsSUFBSTtRQUM3QyxLQUFLLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQ2pFLENBQUM7OEdBekNRLDZCQUE2QjtrR0FBN0IsNkJBQTZCOzsyRkFBN0IsNkJBQTZCO2tCQUp6QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFVBQVUsRUFBRSxJQUFJO2lCQUNuQjtnSkFPYyxXQUFXO3NCQURyQixLQUFLO3VCQUFDLHNCQUFzQjtnQkFhdEIsY0FBYztzQkFEcEIsS0FBSzt1QkFBQyw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIERpcmVjdGl2ZSxcbiAgICBFbGVtZW50UmVmLFxuICAgIElucHV0LFxuICAgIE5nWm9uZVxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbHVtblR5cGUgfSBmcm9tICcuLi8uLi9jb21tb24vZ3JpZC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUGl2b3RSb3dIZWFkZXJHcm91cFR5cGUgfSBmcm9tICcuLi8uLi9waXZvdC1ncmlkL3Bpdm90LWdyaWQuaW50ZXJmYWNlJztcbmltcG9ydCB7IElneFBpdm90Q29sdW1uUmVzaXppbmdTZXJ2aWNlIH0gZnJvbSAnLi9waXZvdC1yZXNpemluZy5zZXJ2aWNlJ1xuaW1wb3J0IHsgSWd4UmVzaXplSGFuZGxlRGlyZWN0aXZlIH0gZnJvbSAnLi4vcmVzaXplLWhhbmRsZS5kaXJlY3RpdmUnO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqIEBpbnRlcm5hbFxuICovXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ3hQaXZvdFJlc2l6ZUhhbmRsZV0nLFxuICAgIHN0YW5kYWxvbmU6IHRydWVcbn0pXG5leHBvcnQgY2xhc3MgSWd4UGl2b3RSZXNpemVIYW5kbGVEaXJlY3RpdmUgZXh0ZW5kcyBJZ3hSZXNpemVIYW5kbGVEaXJlY3RpdmUge1xuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIEBJbnB1dCgnaWd4UGl2b3RSZXNpemVIYW5kbGUnKVxuICAgIHB1YmxpYyBzZXQgcGl2b3RDb2x1bW4odmFsdWU6IENvbHVtblR5cGUpIHtcbiAgICAgICAgdGhpcy5jb2x1bW4gPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHBpdm90Q29sdW1uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW47XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIEBJbnB1dCgnaWd4UGl2b3RSZXNpemVIYW5kbGVIZWFkZXInKVxuICAgIHB1YmxpYyByb3dIZWFkZXJHcm91cDogUGl2b3RSb3dIZWFkZXJHcm91cFR5cGU7XG5cbiAgICBjb25zdHJ1Y3Rvcih6b25lOiBOZ1pvbmUsXG4gICAgICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWYsXG4gICAgICAgIHB1YmxpYyBvdmVycmlkZSBjb2xSZXNpemluZ1NlcnZpY2U6IElneFBpdm90Q29sdW1uUmVzaXppbmdTZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKHpvbmUsIGVsZW1lbnQsIGNvbFJlc2l6aW5nU2VydmljZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHB1YmxpYyBvdmVycmlkZSBvbkRvdWJsZUNsaWNrKCkge1xuICAgICAgICB0aGlzLl9kYmxDbGljayA9IHRydWU7XG4gICAgICAgIHRoaXMuaW5pdFJlc2l6ZVNlcnZpY2UoKTtcbiAgICAgICAgdGhpcy5yb3dIZWFkZXJHcm91cC5ncmlkLmF1dG9TaXplUm93RGltZW5zaW9uKHRoaXMucm93SGVhZGVyR3JvdXAucGFyZW50LnJvb3REaW1lbnNpb24pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgb3ZlcnJpZGUgaW5pdFJlc2l6ZVNlcnZpY2UoZXZlbnQgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyLmluaXRSZXNpemVTZXJ2aWNlKGV2ZW50KTtcbiAgICAgICAgdGhpcy5jb2xSZXNpemluZ1NlcnZpY2Uucm93SGVhZGVyR3JvdXAgPSB0aGlzLnJvd0hlYWRlckdyb3VwO1xuICAgIH1cbn1cbiJdfQ==