import { Component, Directive, HostBinding } from '@angular/core';
import * as i0 from "@angular/core";
export class IgxExcelTextDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxExcelTextDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: IgxExcelTextDirective, isStandalone: true, selector: "[excelText],excel-text", ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxExcelTextDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[excelText],excel-text',
                    standalone: true
                }]
        }] });
export class IgxCSVTextDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxCSVTextDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: IgxCSVTextDirective, isStandalone: true, selector: "[csvText],csv-text", ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxCSVTextDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[csvText],csv-text',
                    standalone: true
                }]
        }] });
/**
 * Provides a way to template the title portion of the toolbar in the grid.
 *
 * @igxModule IgxGridToolbarModule
 * @igxParent IgxGridToolbarComponent
 *
 * @example
 * ```html
 * <igx-grid-toolbar-title>My custom title</igx-grid-toolbar-title>
 * ```
 */
export class IgxGridToolbarTitleComponent {
    constructor() {
        /**
         * Host `class.igx-grid-toolbar__title` binding.
         *
         * @hidden
         * @internal
         */
        this.cssClass = 'igx-grid-toolbar__title';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxGridToolbarTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: IgxGridToolbarTitleComponent, isStandalone: true, selector: "igx-grid-toolbar-title", host: { properties: { "class.igx-grid-toolbar__title": "this.cssClass" } }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxGridToolbarTitleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-grid-toolbar-title', template: '<ng-content></ng-content>',
                    standalone: true
                }]
        }], propDecorators: { cssClass: [{
                type: HostBinding,
                args: ['class.igx-grid-toolbar__title']
            }] } });
/**
 * Provides a way to template the action portion of the toolbar in the grid.
 *
 * @igxModule IgxGridToolbarModule
 * @igxParent IgxGridToolbarComponent
 *
 * @example
 * ```html
 * <igx-grid-toolbar-actions>
 *  <some-toolbar-action-here />
 * </igx-grid-toolbar-actions>
 * ```
 */
export class IgxGridToolbarActionsComponent {
    constructor() {
        /**
         * Host `class.igx-grid-toolbar__actions` binding.
         *
         * @hidden
         * @internal
         */
        this.cssClass = 'igx-grid-toolbar__actions';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxGridToolbarActionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: IgxGridToolbarActionsComponent, isStandalone: true, selector: "igx-grid-toolbar-actions", host: { properties: { "class.igx-grid-toolbar__actions": "this.cssClass" } }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxGridToolbarActionsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-grid-toolbar-actions', template: '<ng-content></ng-content>',
                    standalone: true
                }]
        }], propDecorators: { cssClass: [{
                type: HostBinding,
                args: ['class.igx-grid-toolbar__actions']
            }] } });
export class IgxGridToolbarDirective {
    constructor(template) {
        this.template = template;
    }
    static ngTemplateContextGuard(_dir, ctx) {
        return true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxGridToolbarDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: IgxGridToolbarDirective, isStandalone: true, selector: "[igxGridToolbar]", ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxGridToolbarDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxGridToolbar]',
                    standalone: true
                }]
        }], ctorParameters: () => [{ type: i0.TemplateRef }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2dyaWRzL3Rvb2xiYXIvY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBZSxNQUFNLGVBQWUsQ0FBQzs7QUFPL0UsTUFBTSxPQUFPLHFCQUFxQjs4R0FBckIscUJBQXFCO2tHQUFyQixxQkFBcUI7OzJGQUFyQixxQkFBcUI7a0JBSmpDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsVUFBVSxFQUFFLElBQUk7aUJBQ25COztBQU9ELE1BQU0sT0FBTyxtQkFBbUI7OEdBQW5CLG1CQUFtQjtrR0FBbkIsbUJBQW1COzsyRkFBbkIsbUJBQW1CO2tCQUovQixTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFVBQVUsRUFBRSxJQUFJO2lCQUNuQjs7QUFHRDs7Ozs7Ozs7OztHQVVHO0FBS0gsTUFBTSxPQUFPLDRCQUE0QjtJQUp6QztRQUtJOzs7OztXQUtHO1FBRUksYUFBUSxHQUFHLHlCQUF5QixDQUFDO0tBQy9DOzhHQVRZLDRCQUE0QjtrR0FBNUIsNEJBQTRCLDhKQUhTLDJCQUEyQjs7MkZBR2hFLDRCQUE0QjtrQkFKeEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsd0JBQXdCLEVBQUUsUUFBUSxFQUFFLDJCQUEyQjtvQkFDekUsVUFBVSxFQUFFLElBQUk7aUJBQ25COzhCQVNVLFFBQVE7c0JBRGQsV0FBVzt1QkFBQywrQkFBK0I7O0FBSWhEOzs7Ozs7Ozs7Ozs7R0FZRztBQUtILE1BQU0sT0FBTyw4QkFBOEI7SUFKM0M7UUFLSTs7Ozs7V0FLRztRQUVJLGFBQVEsR0FBRywyQkFBMkIsQ0FBQztLQUNoRDs4R0FUVyw4QkFBOEI7a0dBQTlCLDhCQUE4QixrS0FIUywyQkFBMkI7OzJGQUdsRSw4QkFBOEI7a0JBSjFDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLDBCQUEwQixFQUFFLFFBQVEsRUFBRSwyQkFBMkI7b0JBQzNFLFVBQVUsRUFBRSxJQUFJO2lCQUNuQjs4QkFTVSxRQUFRO3NCQURkLFdBQVc7dUJBQUMsaUNBQWlDOztBQVlsRCxNQUFNLE9BQU8sdUJBQXVCO0lBQ2hDLFlBQW1CLFFBQW9EO1FBQXBELGFBQVEsR0FBUixRQUFRLENBQTRDO0lBQUcsQ0FBQztJQUVwRSxNQUFNLENBQUMsc0JBQXNCLENBQUMsSUFBNkIsRUFDOUQsR0FBWTtRQUNaLE9BQU8sSUFBSSxDQUFBO0lBQ2YsQ0FBQzs4R0FOUSx1QkFBdUI7a0dBQXZCLHVCQUF1Qjs7MkZBQXZCLHVCQUF1QjtrQkFKbkMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixVQUFVLEVBQUUsSUFBSTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHcmlkVHlwZSB9IGZyb20gJy4uL2NvbW1vbi9ncmlkLmludGVyZmFjZSc7XG5cbkBEaXJlY3RpdmUoey8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvZGlyZWN0aXZlLXNlbGVjdG9yXG4gICAgc2VsZWN0b3I6ICdbZXhjZWxUZXh0XSxleGNlbC10ZXh0JyxcbiAgICBzdGFuZGFsb25lOiB0cnVlXG59KVxuZXhwb3J0IGNsYXNzIElneEV4Y2VsVGV4dERpcmVjdGl2ZSB7IH1cblxuQERpcmVjdGl2ZSh7Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9kaXJlY3RpdmUtc2VsZWN0b3JcbiAgICBzZWxlY3RvcjogJ1tjc3ZUZXh0XSxjc3YtdGV4dCcsXG4gICAgc3RhbmRhbG9uZTogdHJ1ZVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hDU1ZUZXh0RGlyZWN0aXZlIHsgfVxuXG4vKipcbiAqIFByb3ZpZGVzIGEgd2F5IHRvIHRlbXBsYXRlIHRoZSB0aXRsZSBwb3J0aW9uIG9mIHRoZSB0b29sYmFyIGluIHRoZSBncmlkLlxuICpcbiAqIEBpZ3hNb2R1bGUgSWd4R3JpZFRvb2xiYXJNb2R1bGVcbiAqIEBpZ3hQYXJlbnQgSWd4R3JpZFRvb2xiYXJDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbFxuICogPGlneC1ncmlkLXRvb2xiYXItdGl0bGU+TXkgY3VzdG9tIHRpdGxlPC9pZ3gtZ3JpZC10b29sYmFyLXRpdGxlPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaWd4LWdyaWQtdG9vbGJhci10aXRsZScsIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gICAgc3RhbmRhbG9uZTogdHJ1ZVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkVG9vbGJhclRpdGxlQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBIb3N0IGBjbGFzcy5pZ3gtZ3JpZC10b29sYmFyX190aXRsZWAgYmluZGluZy5cbiAgICAgKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1ncmlkLXRvb2xiYXJfX3RpdGxlJylcbiAgICBwdWJsaWMgY3NzQ2xhc3MgPSAnaWd4LWdyaWQtdG9vbGJhcl9fdGl0bGUnO1xufVxuXG4vKipcbiAqIFByb3ZpZGVzIGEgd2F5IHRvIHRlbXBsYXRlIHRoZSBhY3Rpb24gcG9ydGlvbiBvZiB0aGUgdG9vbGJhciBpbiB0aGUgZ3JpZC5cbiAqXG4gKiBAaWd4TW9kdWxlIElneEdyaWRUb29sYmFyTW9kdWxlXG4gKiBAaWd4UGFyZW50IElneEdyaWRUb29sYmFyQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWxcbiAqIDxpZ3gtZ3JpZC10b29sYmFyLWFjdGlvbnM+XG4gKiAgPHNvbWUtdG9vbGJhci1hY3Rpb24taGVyZSAvPlxuICogPC9pZ3gtZ3JpZC10b29sYmFyLWFjdGlvbnM+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdpZ3gtZ3JpZC10b29sYmFyLWFjdGlvbnMnLCB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxuICAgIHN0YW5kYWxvbmU6IHRydWVcbn0pXG5leHBvcnQgY2xhc3MgSWd4R3JpZFRvb2xiYXJBY3Rpb25zQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBIb3N0IGBjbGFzcy5pZ3gtZ3JpZC10b29sYmFyX19hY3Rpb25zYCBiaW5kaW5nLlxuICAgICAqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWdyaWQtdG9vbGJhcl9fYWN0aW9ucycpXG4gICAgcHVibGljIGNzc0NsYXNzID0gJ2lneC1ncmlkLXRvb2xiYXJfX2FjdGlvbnMnO1xuIH1cblxuZXhwb3J0IGludGVyZmFjZSBJZ3hHcmlkVG9vbGJhclRlbXBsYXRlQ29udGV4dCB7XG4gICAgJGltcGxpY2l0OiBHcmlkVHlwZTtcbn1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4R3JpZFRvb2xiYXJdJyxcbiAgICBzdGFuZGFsb25lOiB0cnVlXG59KVxuZXhwb3J0IGNsYXNzIElneEdyaWRUb29sYmFyRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPElneEdyaWRUb29sYmFyVGVtcGxhdGVDb250ZXh0Pikge31cblxuICAgIHB1YmxpYyBzdGF0aWMgbmdUZW1wbGF0ZUNvbnRleHRHdWFyZChfZGlyOiBJZ3hHcmlkVG9vbGJhckRpcmVjdGl2ZSxcbiAgICAgICAgY3R4OiB1bmtub3duKTogY3R4IGlzIElneEdyaWRUb29sYmFyVGVtcGxhdGVDb250ZXh0IHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG59XG4iXX0=