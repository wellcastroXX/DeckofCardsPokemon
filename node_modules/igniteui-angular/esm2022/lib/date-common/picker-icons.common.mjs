import { Component, Output, EventEmitter, HostListener, Directive } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Templates the default toggle icon in the picker.
 *
 * @remarks Can be applied to IgxDatePickerComponent, IgxTimePickerComponent, IgxDateRangePickerComponent
 *
 * @example
 * ```html
 * <igx-date-range-picker>
 *   <igx-picker-toggle igxSuffix>
 *      <igx-icon>calendar_view_day</igx-icon>
 *   </igx-picker-toggle>
 * </igx-date-range-picker>
 * ```
 */
export class IgxPickerToggleComponent {
    constructor() {
        this.clicked = new EventEmitter();
    }
    onClick(event) {
        // do not focus input on click
        event.stopPropagation();
        this.clicked.emit();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxPickerToggleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: IgxPickerToggleComponent, isStandalone: true, selector: "igx-picker-toggle", outputs: { clicked: "clicked" }, host: { listeners: { "click": "onClick($event)" } }, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxPickerToggleComponent, decorators: [{
            type: Component,
            args: [{
                    template: `<ng-content></ng-content>`,
                    selector: 'igx-picker-toggle',
                    standalone: true
                }]
        }], propDecorators: { clicked: [{
                type: Output
            }], onClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
/**
 * Templates the default clear icon in the picker.
 *
 * @remarks Can be applied to IgxDatePickerComponent, IgxTimePickerComponent, IgxDateRangePickerComponent
 *
 * @example
 * ```html
 * <igx-date-picker>
 *   <igx-picker-clear igxSuffix>
 *      <igx-icon>delete</igx-icon>
 *   </igx-picker-clear>
 * </igx-date-picker>
 * ```
 */
export class IgxPickerClearComponent extends IgxPickerToggleComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxPickerClearComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: IgxPickerClearComponent, isStandalone: true, selector: "igx-picker-clear", usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxPickerClearComponent, decorators: [{
            type: Component,
            args: [{
                    template: `<ng-content></ng-content>`,
                    selector: 'igx-picker-clear',
                    standalone: true
                }]
        }] });
/**
 * IgxPickerActionsDirective can be used to re-template the dropdown/dialog action buttons.
 *
 * @remarks Can be applied to IgxDatePickerComponent, IgxTimePickerComponent, IgxDateRangePickerComponent
 *
 */
export class IgxPickerActionsDirective {
    constructor(template) {
        this.template = template;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxPickerActionsDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: IgxPickerActionsDirective, isStandalone: true, selector: "[igxPickerActions]", ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxPickerActionsDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxPickerActions]',
                    standalone: true
                }]
        }], ctorParameters: () => [{ type: i0.TemplateRef }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlja2VyLWljb25zLmNvbW1vbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9kYXRlLWNvbW1vbi9waWNrZXItaWNvbnMuY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFlLE1BQU0sZUFBZSxDQUFDOztBQUV0Rzs7Ozs7Ozs7Ozs7OztHQWFHO0FBTUgsTUFBTSxPQUFPLHdCQUF3QjtJQUxyQztRQU9XLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0tBUXZDO0lBTFUsT0FBTyxDQUFDLEtBQWlCO1FBQzVCLDhCQUE4QjtRQUM5QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN4QixDQUFDOzhHQVRRLHdCQUF3QjtrR0FBeEIsd0JBQXdCLG1LQUp2QiwyQkFBMkI7OzJGQUk1Qix3QkFBd0I7a0JBTHBDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsVUFBVSxFQUFFLElBQUk7aUJBQ25COzhCQUdVLE9BQU87c0JBRGIsTUFBTTtnQkFJQSxPQUFPO3NCQURiLFlBQVk7dUJBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDOztBQVFyQzs7Ozs7Ozs7Ozs7OztHQWFHO0FBTUgsTUFBTSxPQUFPLHVCQUF3QixTQUFRLHdCQUF3Qjs4R0FBeEQsdUJBQXVCO2tHQUF2Qix1QkFBdUIsbUdBSnRCLDJCQUEyQjs7MkZBSTVCLHVCQUF1QjtrQkFMbkMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixVQUFVLEVBQUUsSUFBSTtpQkFDbkI7O0FBR0Q7Ozs7O0dBS0c7QUFLSCxNQUFNLE9BQU8seUJBQXlCO0lBQ2xDLFlBQW1CLFFBQTBCO1FBQTFCLGFBQVEsR0FBUixRQUFRLENBQWtCO0lBQUksQ0FBQzs4R0FEekMseUJBQXlCO2tHQUF6Qix5QkFBeUI7OzJGQUF6Qix5QkFBeUI7a0JBSnJDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsVUFBVSxFQUFFLElBQUk7aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdExpc3RlbmVyLCBEaXJlY3RpdmUsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogVGVtcGxhdGVzIHRoZSBkZWZhdWx0IHRvZ2dsZSBpY29uIGluIHRoZSBwaWNrZXIuXG4gKlxuICogQHJlbWFya3MgQ2FuIGJlIGFwcGxpZWQgdG8gSWd4RGF0ZVBpY2tlckNvbXBvbmVudCwgSWd4VGltZVBpY2tlckNvbXBvbmVudCwgSWd4RGF0ZVJhbmdlUGlja2VyQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWxcbiAqIDxpZ3gtZGF0ZS1yYW5nZS1waWNrZXI+XG4gKiAgIDxpZ3gtcGlja2VyLXRvZ2dsZSBpZ3hTdWZmaXg+XG4gKiAgICAgIDxpZ3gtaWNvbj5jYWxlbmRhcl92aWV3X2RheTwvaWd4LWljb24+XG4gKiAgIDwvaWd4LXBpY2tlci10b2dnbGU+XG4gKiA8L2lneC1kYXRlLXJhbmdlLXBpY2tlcj5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICB0ZW1wbGF0ZTogYDxuZy1jb250ZW50PjwvbmctY29udGVudD5gLFxuICAgIHNlbGVjdG9yOiAnaWd4LXBpY2tlci10b2dnbGUnLFxuICAgIHN0YW5kYWxvbmU6IHRydWVcbn0pXG5leHBvcnQgY2xhc3MgSWd4UGlja2VyVG9nZ2xlQ29tcG9uZW50IHtcbiAgICBAT3V0cHV0KClcbiAgICBwdWJsaWMgY2xpY2tlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSlcbiAgICBwdWJsaWMgb25DbGljayhldmVudDogTW91c2VFdmVudCkge1xuICAgICAgICAvLyBkbyBub3QgZm9jdXMgaW5wdXQgb24gY2xpY2tcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHRoaXMuY2xpY2tlZC5lbWl0KCk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRlbXBsYXRlcyB0aGUgZGVmYXVsdCBjbGVhciBpY29uIGluIHRoZSBwaWNrZXIuXG4gKlxuICogQHJlbWFya3MgQ2FuIGJlIGFwcGxpZWQgdG8gSWd4RGF0ZVBpY2tlckNvbXBvbmVudCwgSWd4VGltZVBpY2tlckNvbXBvbmVudCwgSWd4RGF0ZVJhbmdlUGlja2VyQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWxcbiAqIDxpZ3gtZGF0ZS1waWNrZXI+XG4gKiAgIDxpZ3gtcGlja2VyLWNsZWFyIGlneFN1ZmZpeD5cbiAqICAgICAgPGlneC1pY29uPmRlbGV0ZTwvaWd4LWljb24+XG4gKiAgIDwvaWd4LXBpY2tlci1jbGVhcj5cbiAqIDwvaWd4LWRhdGUtcGlja2VyPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmAsXG4gICAgc2VsZWN0b3I6ICdpZ3gtcGlja2VyLWNsZWFyJyxcbiAgICBzdGFuZGFsb25lOiB0cnVlXG59KVxuZXhwb3J0IGNsYXNzIElneFBpY2tlckNsZWFyQ29tcG9uZW50IGV4dGVuZHMgSWd4UGlja2VyVG9nZ2xlQ29tcG9uZW50IHsgfVxuXG4vKipcbiAqIElneFBpY2tlckFjdGlvbnNEaXJlY3RpdmUgY2FuIGJlIHVzZWQgdG8gcmUtdGVtcGxhdGUgdGhlIGRyb3Bkb3duL2RpYWxvZyBhY3Rpb24gYnV0dG9ucy5cbiAqXG4gKiBAcmVtYXJrcyBDYW4gYmUgYXBwbGllZCB0byBJZ3hEYXRlUGlja2VyQ29tcG9uZW50LCBJZ3hUaW1lUGlja2VyQ29tcG9uZW50LCBJZ3hEYXRlUmFuZ2VQaWNrZXJDb21wb25lbnRcbiAqXG4gKi9cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW2lneFBpY2tlckFjdGlvbnNdJyxcbiAgICBzdGFuZGFsb25lOiB0cnVlXG59KVxuZXhwb3J0IGNsYXNzIElneFBpY2tlckFjdGlvbnNEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PikgeyB9XG59XG5cbiJdfQ==