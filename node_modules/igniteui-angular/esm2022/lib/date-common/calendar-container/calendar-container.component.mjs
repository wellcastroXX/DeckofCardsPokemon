import { NgIf, NgTemplateOutlet } from '@angular/common';
import { Component, ViewChild, Output, EventEmitter, HostListener, HostBinding } from '@angular/core';
import { PickerInteractionMode } from '../../date-common/types';
import { IgxButtonDirective } from '../../directives/button/button.directive';
import { IgxRippleDirective } from '../../directives/ripple/ripple.directive';
import { IgxCalendarComponent } from '../../calendar/calendar.component';
import * as i0 from "@angular/core";
/** @hidden */
export class IgxCalendarContainerComponent {
    constructor() {
        this.calendarClose = new EventEmitter();
        this.todaySelection = new EventEmitter();
        this.styleClass = 'igx-date-picker';
        this.vertical = false;
        this.mode = PickerInteractionMode.DropDown;
    }
    get dropdownCSS() {
        return this.mode === PickerInteractionMode.DropDown;
    }
    get verticalCSS() {
        return this.vertical && this.mode === PickerInteractionMode.Dialog;
    }
    onEscape(event) {
        event.preventDefault();
        this.calendarClose.emit();
    }
    get isReadonly() {
        return this.mode === PickerInteractionMode.Dialog;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxCalendarContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: IgxCalendarContainerComponent, isStandalone: true, selector: "igx-calendar-container", outputs: { calendarClose: "calendarClose", todaySelection: "todaySelection" }, host: { listeners: { "keydown.alt.arrowup": "onEscape($event)" }, properties: { "class.igx-date-picker": "this.styleClass", "class.igx-date-picker--dropdown": "this.dropdownCSS", "class.igx-date-picker--vertical": "this.verticalCSS" } }, viewQueries: [{ propertyName: "calendar", first: true, predicate: IgxCalendarComponent, descendants: true, static: true }], ngImport: i0, template: "<ng-template #defaultPickerActions>\n    <div *ngIf=\"closeButtonLabel || todayButtonLabel\" class=\"igx-date-picker__buttons\">\n        <button #closeButton *ngIf=\"closeButtonLabel\" type=\"button\" igxButton=\"flat\" igxRipple\n            (click)=\"calendarClose.emit({ owner: this })\">\n            {{ closeButtonLabel }}\n        </button>\n        <button #todayButton *ngIf=\"todayButtonLabel\" type=\"button\" igxButton=\"flat\" igxRipple\n            (click)=\"todaySelection.emit({ owner: this })\">\n            {{ todayButtonLabel }}\n        </button>\n    </div>\n</ng-template>\n\n<igx-calendar></igx-calendar>\n<ng-container *ngTemplateOutlet=\"pickerActions?.template || defaultPickerActions; context: { $implicit: calendar }\">\n</ng-container>\n", styles: [":host{display:block}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: IgxButtonDirective, selector: "[igxButton]", inputs: ["selected", "igxButton", "igxButtonColor", "igxButtonBackground", "igxLabel"], outputs: ["buttonSelected"] }, { kind: "directive", type: IgxRippleDirective, selector: "[igxRipple]", inputs: ["igxRippleTarget", "igxRipple", "igxRippleDuration", "igxRippleCentered", "igxRippleDisabled"] }, { kind: "component", type: IgxCalendarComponent, selector: "igx-calendar", inputs: ["id", "hasHeader", "vertical", "monthsViewNumber", "showWeekNumbers", "animationAction"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxCalendarContainerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'igx-calendar-container', standalone: true, imports: [NgIf, IgxButtonDirective, IgxRippleDirective, IgxCalendarComponent, NgTemplateOutlet], template: "<ng-template #defaultPickerActions>\n    <div *ngIf=\"closeButtonLabel || todayButtonLabel\" class=\"igx-date-picker__buttons\">\n        <button #closeButton *ngIf=\"closeButtonLabel\" type=\"button\" igxButton=\"flat\" igxRipple\n            (click)=\"calendarClose.emit({ owner: this })\">\n            {{ closeButtonLabel }}\n        </button>\n        <button #todayButton *ngIf=\"todayButtonLabel\" type=\"button\" igxButton=\"flat\" igxRipple\n            (click)=\"todaySelection.emit({ owner: this })\">\n            {{ todayButtonLabel }}\n        </button>\n    </div>\n</ng-template>\n\n<igx-calendar></igx-calendar>\n<ng-container *ngTemplateOutlet=\"pickerActions?.template || defaultPickerActions; context: { $implicit: calendar }\">\n</ng-container>\n", styles: [":host{display:block}\n"] }]
        }], propDecorators: { calendar: [{
                type: ViewChild,
                args: [IgxCalendarComponent, { static: true }]
            }], calendarClose: [{
                type: Output
            }], todaySelection: [{
                type: Output
            }], styleClass: [{
                type: HostBinding,
                args: ['class.igx-date-picker']
            }], dropdownCSS: [{
                type: HostBinding,
                args: ['class.igx-date-picker--dropdown']
            }], verticalCSS: [{
                type: HostBinding,
                args: ['class.igx-date-picker--vertical']
            }], onEscape: [{
                type: HostListener,
                args: ['keydown.alt.arrowup', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9kYXRlLWNvbW1vbi9jYWxlbmRhci1jb250YWluZXIvY2FsZW5kYXItY29udGFpbmVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9kYXRlLWNvbW1vbi9jYWxlbmRhci1jb250YWluZXIvY2FsZW5kYXItY29udGFpbmVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEcsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDOUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFFOUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7O0FBRXpFLGNBQWM7QUFRZCxNQUFNLE9BQU8sNkJBQTZCO0lBUDFDO1FBWVcsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBa0IsQ0FBQztRQUduRCxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFrQixDQUFDO1FBR3BELGVBQVUsR0FBRyxpQkFBaUIsQ0FBQztRQVkvQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBR2pCLFNBQUksR0FBMEIscUJBQXFCLENBQUMsUUFBUSxDQUFDO0tBWXZFO0lBekJHLElBQ1csV0FBVztRQUNsQixPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUsscUJBQXFCLENBQUMsUUFBUSxDQUFDO0lBQ3hELENBQUM7SUFFRCxJQUNXLFdBQVc7UUFDbEIsT0FBTyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUsscUJBQXFCLENBQUMsTUFBTSxDQUFDO0lBQ3ZFLENBQUM7SUFTTSxRQUFRLENBQUMsS0FBSztRQUNqQixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBRUQsSUFBVyxVQUFVO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxxQkFBcUIsQ0FBQyxNQUFNLENBQUM7SUFDdEQsQ0FBQzs4R0FyQ1EsNkJBQTZCO2tHQUE3Qiw2QkFBNkIseWJBQzNCLG9CQUFvQiw4RENsQm5DLGl3QkFnQkEsZ0ZERGMsSUFBSSw2RkFBRSxrQkFBa0IsNktBQUUsa0JBQWtCLGlLQUFFLG9CQUFvQiw0SkFBRSxnQkFBZ0I7OzJGQUVyRiw2QkFBNkI7a0JBUHpDLFNBQVM7K0JBQ0ksd0JBQXdCLGNBR3RCLElBQUksV0FDUCxDQUFDLElBQUksRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxvQkFBb0IsRUFBRSxnQkFBZ0IsQ0FBQzs4QkFJeEYsUUFBUTtzQkFEZCxTQUFTO3VCQUFDLG9CQUFvQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtnQkFJMUMsYUFBYTtzQkFEbkIsTUFBTTtnQkFJQSxjQUFjO3NCQURwQixNQUFNO2dCQUlBLFVBQVU7c0JBRGhCLFdBQVc7dUJBQUMsdUJBQXVCO2dCQUl6QixXQUFXO3NCQURyQixXQUFXO3VCQUFDLGlDQUFpQztnQkFNbkMsV0FBVztzQkFEckIsV0FBVzt1QkFBQyxpQ0FBaUM7Z0JBWXZDLFFBQVE7c0JBRGQsWUFBWTt1QkFBQyxxQkFBcUIsRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nSWYsIE5nVGVtcGxhdGVPdXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBIb3N0TGlzdGVuZXIsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJQmFzZUV2ZW50QXJncyB9IGZyb20gJy4uLy4uL2NvcmUvdXRpbHMnO1xuaW1wb3J0IHsgUGlja2VySW50ZXJhY3Rpb25Nb2RlIH0gZnJvbSAnLi4vLi4vZGF0ZS1jb21tb24vdHlwZXMnO1xuaW1wb3J0IHsgSWd4QnV0dG9uRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9idXR0b24vYnV0dG9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hSaXBwbGVEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL3JpcHBsZS9yaXBwbGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneFBpY2tlckFjdGlvbnNEaXJlY3RpdmUgfSBmcm9tICcuLi9waWNrZXItaWNvbnMuY29tbW9uJztcbmltcG9ydCB7IElneENhbGVuZGFyQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY2FsZW5kYXIvY2FsZW5kYXIuY29tcG9uZW50JztcblxuLyoqIEBoaWRkZW4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaWd4LWNhbGVuZGFyLWNvbnRhaW5lcicsXG4gICAgc3R5bGVzOiBbJzpob3N0IHtkaXNwbGF5OiBibG9jazt9J10sXG4gICAgdGVtcGxhdGVVcmw6ICdjYWxlbmRhci1jb250YWluZXIuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW05nSWYsIElneEJ1dHRvbkRpcmVjdGl2ZSwgSWd4UmlwcGxlRGlyZWN0aXZlLCBJZ3hDYWxlbmRhckNvbXBvbmVudCwgTmdUZW1wbGF0ZU91dGxldF1cbn0pXG5leHBvcnQgY2xhc3MgSWd4Q2FsZW5kYXJDb250YWluZXJDb21wb25lbnQge1xuICAgIEBWaWV3Q2hpbGQoSWd4Q2FsZW5kYXJDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pXG4gICAgcHVibGljIGNhbGVuZGFyOiBJZ3hDYWxlbmRhckNvbXBvbmVudDtcblxuICAgIEBPdXRwdXQoKVxuICAgIHB1YmxpYyBjYWxlbmRhckNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxJQmFzZUV2ZW50QXJncz4oKTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHB1YmxpYyB0b2RheVNlbGVjdGlvbiA9IG5ldyBFdmVudEVtaXR0ZXI8SUJhc2VFdmVudEFyZ3M+KCk7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1kYXRlLXBpY2tlcicpXG4gICAgcHVibGljIHN0eWxlQ2xhc3MgPSAnaWd4LWRhdGUtcGlja2VyJztcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWRhdGUtcGlja2VyLS1kcm9wZG93bicpXG4gICAgcHVibGljIGdldCBkcm9wZG93bkNTUygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gUGlja2VySW50ZXJhY3Rpb25Nb2RlLkRyb3BEb3duO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWRhdGUtcGlja2VyLS12ZXJ0aWNhbCcpXG4gICAgcHVibGljIGdldCB2ZXJ0aWNhbENTUygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmVydGljYWwgJiYgdGhpcy5tb2RlID09PSBQaWNrZXJJbnRlcmFjdGlvbk1vZGUuRGlhbG9nO1xuICAgIH1cblxuICAgIHB1YmxpYyB2ZXJ0aWNhbCA9IGZhbHNlO1xuICAgIHB1YmxpYyBjbG9zZUJ1dHRvbkxhYmVsOiBzdHJpbmc7XG4gICAgcHVibGljIHRvZGF5QnV0dG9uTGFiZWw6IHN0cmluZztcbiAgICBwdWJsaWMgbW9kZTogUGlja2VySW50ZXJhY3Rpb25Nb2RlID0gUGlja2VySW50ZXJhY3Rpb25Nb2RlLkRyb3BEb3duO1xuICAgIHB1YmxpYyBwaWNrZXJBY3Rpb25zOiBJZ3hQaWNrZXJBY3Rpb25zRGlyZWN0aXZlO1xuXG4gICAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bi5hbHQuYXJyb3d1cCcsIFsnJGV2ZW50J10pXG4gICAgcHVibGljIG9uRXNjYXBlKGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuY2FsZW5kYXJDbG9zZS5lbWl0KCk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBpc1JlYWRvbmx5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tb2RlID09PSBQaWNrZXJJbnRlcmFjdGlvbk1vZGUuRGlhbG9nO1xuICAgIH1cbn1cblxuLyoqIEBoaWRkZW4gKi9cblxuIiwiPG5nLXRlbXBsYXRlICNkZWZhdWx0UGlja2VyQWN0aW9ucz5cbiAgICA8ZGl2ICpuZ0lmPVwiY2xvc2VCdXR0b25MYWJlbCB8fCB0b2RheUJ1dHRvbkxhYmVsXCIgY2xhc3M9XCJpZ3gtZGF0ZS1waWNrZXJfX2J1dHRvbnNcIj5cbiAgICAgICAgPGJ1dHRvbiAjY2xvc2VCdXR0b24gKm5nSWY9XCJjbG9zZUJ1dHRvbkxhYmVsXCIgdHlwZT1cImJ1dHRvblwiIGlneEJ1dHRvbj1cImZsYXRcIiBpZ3hSaXBwbGVcbiAgICAgICAgICAgIChjbGljayk9XCJjYWxlbmRhckNsb3NlLmVtaXQoeyBvd25lcjogdGhpcyB9KVwiPlxuICAgICAgICAgICAge3sgY2xvc2VCdXR0b25MYWJlbCB9fVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiAjdG9kYXlCdXR0b24gKm5nSWY9XCJ0b2RheUJ1dHRvbkxhYmVsXCIgdHlwZT1cImJ1dHRvblwiIGlneEJ1dHRvbj1cImZsYXRcIiBpZ3hSaXBwbGVcbiAgICAgICAgICAgIChjbGljayk9XCJ0b2RheVNlbGVjdGlvbi5lbWl0KHsgb3duZXI6IHRoaXMgfSlcIj5cbiAgICAgICAgICAgIHt7IHRvZGF5QnV0dG9uTGFiZWwgfX1cbiAgICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuXG48aWd4LWNhbGVuZGFyPjwvaWd4LWNhbGVuZGFyPlxuPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInBpY2tlckFjdGlvbnM/LnRlbXBsYXRlIHx8IGRlZmF1bHRQaWNrZXJBY3Rpb25zOyBjb250ZXh0OiB7ICRpbXBsaWNpdDogY2FsZW5kYXIgfVwiPlxuPC9uZy1jb250YWluZXI+XG4iXX0=