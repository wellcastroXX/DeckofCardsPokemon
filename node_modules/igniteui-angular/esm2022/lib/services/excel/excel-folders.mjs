import { ExcelFileTypes, ExcelFolderTypes } from './excel-enums';
/** @hidden */
export class RootExcelFolder {
    get folderName() {
        return '';
    }
    childFiles() {
        return [ExcelFileTypes.ContentTypesFile];
    }
    childFolders() {
        return [
            ExcelFolderTypes.RootRelsExcelFolder,
            ExcelFolderTypes.DocPropsExcelFolder,
            ExcelFolderTypes.XLExcelFolder
        ];
    }
}
/** @hidden */
export class RootRelsExcelFolder {
    get folderName() {
        return '_rels';
    }
    childFiles() {
        return [ExcelFileTypes.RootRelsFile];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class DocPropsExcelFolder {
    get folderName() {
        return 'docProps';
    }
    childFiles() {
        return [
            ExcelFileTypes.AppFile,
            ExcelFileTypes.CoreFile
        ];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class XLExcelFolder {
    get folderName() {
        return 'xl';
    }
    childFiles(data) {
        const retVal = [
            ExcelFileTypes.StyleFile,
            ExcelFileTypes.WorkbookFile
        ];
        if (!data.isEmpty || data.options.alwaysExportHeaders) {
            retVal.push(ExcelFileTypes.SharedStringsFile);
        }
        return retVal;
    }
    childFolders(data) {
        const retVal = [
            ExcelFolderTypes.XLRelsExcelFolder,
            ExcelFolderTypes.ThemeExcelFolder,
            ExcelFolderTypes.WorksheetsExcelFolder
        ];
        if ((!data.isEmpty || data.options.alwaysExportHeaders) && data.options.exportAsTable) {
            retVal.push(ExcelFolderTypes.TablesExcelFolder);
        }
        return retVal;
    }
}
/** @hidden */
export class XLRelsExcelFolder {
    get folderName() {
        return '_rels';
    }
    childFiles() {
        return [ExcelFileTypes.WorkbookRelsFile];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class ThemeExcelFolder {
    get folderName() {
        return 'theme';
    }
    childFiles() {
        return [ExcelFileTypes.ThemeFile];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class WorksheetsExcelFolder {
    get folderName() {
        return 'worksheets';
    }
    childFiles() {
        return [ExcelFileTypes.WorksheetFile];
    }
    childFolders(data) {
        return (data.isEmpty && !data.options.alwaysExportHeaders) || !data.options.exportAsTable ? [] : [ExcelFolderTypes.WorksheetsRelsExcelFolder];
    }
}
/** @hidden */
export class TablesExcelFolder {
    get folderName() {
        return 'tables';
    }
    childFiles() {
        return [ExcelFileTypes.TablesFile];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class WorksheetsRelsExcelFolder {
    get folderName() {
        return '_rels';
    }
    childFiles() {
        return [ExcelFileTypes.WorksheetRelsFile];
    }
    childFolders() {
        return [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtZm9sZGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9zZXJ2aWNlcy9leGNlbC9leGNlbC1mb2xkZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxjQUFjLEVBQ2QsZ0JBQWdCLEVBQ25CLE1BQU0sZUFBZSxDQUFDO0FBS3ZCLGNBQWM7QUFDZCxNQUFNLE9BQU8sZUFBZTtJQUN4QixJQUFXLFVBQVU7UUFDakIsT0FBUSxFQUFFLENBQUM7SUFDZixDQUFDO0lBRU0sVUFBVTtRQUNiLE9BQU8sQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sWUFBWTtRQUNmLE9BQU87WUFDSCxnQkFBZ0IsQ0FBQyxtQkFBbUI7WUFDcEMsZ0JBQWdCLENBQUMsbUJBQW1CO1lBQ3BDLGdCQUFnQixDQUFDLGFBQWE7U0FDakMsQ0FBQztJQUNOLENBQUM7Q0FDSjtBQUVELGNBQWM7QUFDZCxNQUFNLE9BQU8sbUJBQW1CO0lBQzVCLElBQVcsVUFBVTtRQUNqQixPQUFRLE9BQU8sQ0FBQztJQUNwQixDQUFDO0lBRU0sVUFBVTtRQUNiLE9BQU8sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVNLFlBQVk7UUFDZixPQUFPLEVBQUUsQ0FBQztJQUNkLENBQUM7Q0FDSjtBQUVELGNBQWM7QUFDZCxNQUFNLE9BQU8sbUJBQW1CO0lBQzVCLElBQVcsVUFBVTtRQUNqQixPQUFRLFVBQVUsQ0FBQztJQUN2QixDQUFDO0lBRU0sVUFBVTtRQUNiLE9BQU87WUFDSCxjQUFjLENBQUMsT0FBTztZQUN0QixjQUFjLENBQUMsUUFBUTtTQUMxQixDQUFDO0lBQ04sQ0FBQztJQUVNLFlBQVk7UUFDZixPQUFPLEVBQUUsQ0FBQztJQUNkLENBQUM7Q0FDSjtBQUVELGNBQWM7QUFDZCxNQUFN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eGNlbEZvbGRlclR5cGVzXG59IGZyb20gJy4vZXhjZWwtZW51bXMnO1xuXG5pbXBvcnQgeyBJRXhjZWxGb2xkZXIgfSBmcm9tICcuL2V4Y2VsLWludGVyZmFjZXMnO1xuaW1wb3J0IHsgV29ya3NoZWV0RGF0YSB9IGZyb20gJy4vd29ya3NoZWV0LWRhdGEnO1xuXG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIFJvb3RFeGNlbEZvbGRlciBpbXBsZW1lbnRzIElFeGNlbEZvbGRlciB7XG4gICAgcHVibGljIGdldCBmb2xkZXJOYW1lKCkge1xuICAgICAgICByZXR1cm4gICcnO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGlsZEZpbGVzKCkge1xuICAgICAgICByZXR1cm4gW0V4Y2VsRmlsZVR5cGVzLkNvbnRlbnRUeXBlc0ZpbGVdO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGlsZEZvbGRlcnMoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBFeGNlbEZvbGRlclR5cGVzLlJvb3RSZWxzRXhjZWxGb2xkZXIsXG4gICAgICAgICAgICBFeGNlbEZvbGRlclR5cGVzLkRvY1Byb3BzRXhjZWxGb2xkZXIsXG4gICAgICAgICAgICBFeGNlbEZvbGRlclR5cGVzLlhMRXhjZWxGb2xkZXJcbiAgICAgICAgXTtcbiAgICB9XG59XG5cbi8qKiBAaGlkZGVuICovXG5leHBvcnQgY2xhc3MgUm9vdFJlbHNFeGNlbEZvbGRlciBpbXBsZW1lbnRzIElFeGNlbEZvbGRlciB7XG4gICAgcHVibGljIGdldCBmb2xkZXJOYW1lKCkge1xuICAgICAgICByZXR1cm4gICdfcmVscyc7XG4gICAgfVxuXG4gICAgcHVibGljIGNoaWxkRmlsZXMoKSB7XG4gICAgICAgIHJldHVybiBbRXhjZWxGaWxlVHlwZXMuUm9vdFJlbHNGaWxlXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2hpbGRGb2xkZXJzKCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufVxuXG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIERvY1Byb3BzRXhjZWxGb2xkZXIgaW1wbGVtZW50cyBJRXhjZWxGb2xkZXIge1xuICAgIHB1YmxpYyBnZXQgZm9sZGVyTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuICAnZG9jUHJvcHMnO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGlsZEZpbGVzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgRXhjZWxGaWxlVHlwZXMuQXBwRmlsZSxcbiAgICAgICAgICAgIEV4Y2VsRmlsZVR5cGVzLkNvcmVGaWxlXG4gICAgICAgIF07XG4gICAgfVxuXG4gICAgcHVibGljIGNoaWxkRm9sZGVycygpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbn1cblxuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBYTEV4Y2VsRm9sZGVyIGltcGxlbWVudHMgSUV4Y2VsRm9sZGVyIHtcbiAgICBwdWJsaWMgZ2V0IGZvbGRlck5hbWUoKSB7XG4gICAgICAgIHJldHVybiAgJ3hsJztcbiAgICB9XG5cbiAgICBwdWJsaWMgY2hpbGRGaWxlcyhkYXRhOiBXb3Jrc2hlZXREYXRhKSB7XG4gICAgICAgIGNvbnN0IHJldFZhbCA9IFtcbiAgICAgICAgICAgIEV4Y2VsRmlsZVR5cGVzLlN0eWxlRmlsZSxcbiAgICAgICAgICAgIEV4Y2VsRmlsZVR5cGVzLldvcmtib29rRmlsZVxuICAgICAgICBdO1xuXG4gICAgICAgIGlmICghZGF0YS5pc0VtcHR5IHx8IGRhdGEub3B0aW9ucy5hbHdheXNFeHBvcnRIZWFkZXJzKSB7XG4gICAgICAgICAgICByZXRWYWwucHVzaChFeGNlbEZpbGVUeXBlcy5TaGFyZWRTdHJpbmdzRmlsZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmV0VmFsO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGlsZEZvbGRlcnMoZGF0YTogV29ya3NoZWV0RGF0YSkge1xuICAgICAgICBjb25zdCByZXRWYWwgPSBbXG4gICAgICAgICAgICBFeGNlbEZvbGRlclR5cGVzLlhMUmVsc0V4Y2VsRm9sZGVyLFxuICAgICAgICAgICAgRXhjZWxGb2xkZXJUeXBlcy5UaGVtZUV4Y2VsRm9sZGVyLFxuICAgICAgICAgICAgRXhjZWxGb2xkZXJUeXBlcy5Xb3Jrc2hlZXRzRXhjZWxGb2xkZXJcbiAgICAgICAgXTtcblxuICAgICAgICBpZiAoKCFkYXRhLmlzRW1wdHkgfHwgZGF0YS5vcHRpb25zLmFsd2F5c0V4cG9ydEhlYWRlcnMpICYmIGRhdGEub3B0aW9ucy5leHBvcnRBc1RhYmxlKSB7XG4gICAgICAgICAgICByZXRWYWwucHVzaChFeGNlbEZvbGRlclR5cGVzLlRhYmxlc0V4Y2VsRm9sZGVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXRWYWw7XG4gICAgfVxufVxuXG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIFhMUmVsc0V4Y2VsRm9sZGVyIGltcGxlbWVudHMgSUV4Y2VsRm9sZGVyIHtcbiAgICBwdWJsaWMgZ2V0IGZvbGRlck5hbWUoKSB7XG4gICAgICAgIHJldHVybiAgJ19yZWxzJztcbiAgICB9XG5cbiAgICBwdWJsaWMgY2hpbGRGaWxlcygpIHtcbiAgICAgICAgcmV0dXJuIFtFeGNlbEZpbGVUeXBlcy5Xb3JrYm9va1JlbHNGaWxlXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2hpbGRGb2xkZXJzKCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufVxuXG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIFRoZW1lRXhjZWxGb2xkZXIgaW1wbGVtZW50cyBJRXhjZWxGb2xkZXIge1xuICAgIHB1YmxpYyBnZXQgZm9sZGVyTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuICAndGhlbWUnO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGlsZEZpbGVzKCkge1xuICAgICAgICByZXR1cm4gW0V4Y2VsRmlsZVR5cGVzLlRoZW1lRmlsZV07XG4gICAgfVxuXG4gICAgcHVibGljIGNoaWxkRm9sZGVycygpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbn1cblxuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBXb3Jrc2hlZXRzRXhjZWxGb2xkZXIgaW1wbGVtZW50cyBJRXhjZWxGb2xkZXIge1xuICAgIHB1YmxpYyBnZXQgZm9sZGVyTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuICAnd29ya3NoZWV0cyc7XG4gICAgfVxuXG4gICAgcHVibGljIGNoaWxkRmlsZXMoKSB7XG4gICAgICAgIHJldHVybiBbRXhjZWxGaWxlVHlwZXMuV29ya3NoZWV0RmlsZV07XG4gICAgfVxuXG4gICAgcHVibGljIGNoaWxkRm9sZGVycyhkYXRhOiBXb3Jrc2hlZXREYXRhKSB7XG4gICAgICAgIHJldHVybiAoZGF0YS5pc0VtcHR5ICYmICFkYXRhLm9wdGlvbnMuYWx3YXlzRXhwb3J0SGVhZGVycykgfHwgIWRhdGEub3B0aW9ucy5leHBvcnRBc1RhYmxlID8gW10gOiBbRXhjZWxGb2xkZXJUeXBlcy5Xb3Jrc2hlZXRzUmVsc0V4Y2VsRm9sZGVyXTtcbiAgICB9XG59XG5cbi8qKiBAaGlkZGVuICovXG5leHBvcnQgY2xhc3MgVGFibGVzRXhjZWxGb2xkZXIgaW1wbGVtZW50cyBJRXhjZWxGb2xkZXIge1xuICAgIHB1YmxpYyBnZXQgZm9sZGVyTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuICd0YWJsZXMnO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGlsZEZpbGVzKCkge1xuICAgICAgICByZXR1cm4gW0V4Y2VsRmlsZVR5cGVzLlRhYmxlc0ZpbGVdO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGlsZEZvbGRlcnMoKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG59XG5cbi8qKiBAaGlkZGVuICovXG5leHBvcnQgY2xhc3MgV29ya3NoZWV0c1JlbHNFeGNlbEZvbGRlciBpbXBsZW1lbnRzIElFeGNlbEZvbGRlciB7XG4gICAgcHVibGljIGdldCBmb2xkZXJOYW1lKCkge1xuICAgICAgICByZXR1cm4gJ19yZWxzJztcbiAgICB9XG5cbiAgICBwdWJsaWMgY2hpbGRGaWxlcygpIHtcbiAgICAgICAgcmV0dXJuIFtFeGNlbEZpbGVUeXBlcy5Xb3Jrc2hlZXRSZWxzRmlsZV07XG4gICAgfVxuXG4gICAgcHVibGljIGNoaWxkRm9sZGVycygpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbn1cbiJdfQ==