import { Injectable } from '@angular/core';
import { IgxAngularAnimationPlayer } from './angular-animation-player';
import * as i0 from "@angular/core";
import * as i1 from "@angular/animations";
export class IgxAngularAnimationService {
    constructor(builder) {
        this.builder = builder;
    }
    buildAnimation(animationMetaData, element) {
        if (!animationMetaData) {
            return null;
        }
        const animationBuilder = this.builder.build(animationMetaData);
        const player = new IgxAngularAnimationPlayer(animationBuilder.create(element));
        return player;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxAngularAnimationService, deps: [{ token: i1.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxAngularAnimationService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: IgxAngularAnimationService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: () => [{ type: i1.AnimationBuilder }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1hbmltYXRpb24tc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9zZXJ2aWNlcy9hbmltYXRpb24vYW5ndWxhci1hbmltYXRpb24tc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFJdkUsTUFBTSxPQUFPLDBCQUEwQjtJQUNuQyxZQUFvQixPQUF5QjtRQUF6QixZQUFPLEdBQVAsT0FBTyxDQUFrQjtJQUFJLENBQUM7SUFDM0MsY0FBYyxDQUFDLGlCQUE2QyxFQUFFLE9BQW9CO1FBQ3JGLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUNwQixPQUFPLElBQUksQ0FBQztTQUNmO1FBQ0QsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQy9ELE1BQU0sTUFBTSxHQUFHLElBQUkseUJBQXlCLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDL0UsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQzs4R0FUUSwwQkFBMEI7a0hBQTFCLDBCQUEwQixjQURkLE1BQU07OzJGQUNsQiwwQkFBMEI7a0JBRHRDLFVBQVU7bUJBQUMsRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQW5pbWF0aW9uQnVpbGRlciwgQW5pbWF0aW9uUmVmZXJlbmNlTWV0YWRhdGEgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneEFuZ3VsYXJBbmltYXRpb25QbGF5ZXIgfSBmcm9tICcuL2FuZ3VsYXItYW5pbWF0aW9uLXBsYXllcic7XG5pbXBvcnQgeyBBbmltYXRpb25TZXJ2aWNlLCBBbmltYXRpb25QbGF5ZXIgfSBmcm9tICcuL2FuaW1hdGlvbic7XG5cbkBJbmplY3RhYmxlKHtwcm92aWRlZEluOiAncm9vdCd9KVxuZXhwb3J0IGNsYXNzIElneEFuZ3VsYXJBbmltYXRpb25TZXJ2aWNlIGltcGxlbWVudHMgQW5pbWF0aW9uU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBidWlsZGVyOiBBbmltYXRpb25CdWlsZGVyKSB7IH1cbiAgICBwdWJsaWMgYnVpbGRBbmltYXRpb24oYW5pbWF0aW9uTWV0YURhdGE6IEFuaW1hdGlvblJlZmVyZW5jZU1ldGFkYXRhLCBlbGVtZW50OiBIVE1MRWxlbWVudCk6IEFuaW1hdGlvblBsYXllciB7XG4gICAgICAgIGlmICghYW5pbWF0aW9uTWV0YURhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFuaW1hdGlvbkJ1aWxkZXIgPSB0aGlzLmJ1aWxkZXIuYnVpbGQoYW5pbWF0aW9uTWV0YURhdGEpO1xuICAgICAgICBjb25zdCBwbGF5ZXIgPSBuZXcgSWd4QW5ndWxhckFuaW1hdGlvblBsYXllcihhbmltYXRpb25CdWlsZGVyLmNyZWF0ZShlbGVtZW50KSk7XG4gICAgICAgIHJldHVybiBwbGF5ZXI7XG4gICAgfVxufVxuIl19