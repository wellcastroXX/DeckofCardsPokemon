import { InjectionToken } from '@angular/core';
import { mkenum } from '../core/utils';
// Enums
export const IgxTreeSelectionType = /*@__PURE__*/ mkenum({
    None: 'None',
    BiState: 'BiState',
    Cascading: 'Cascading'
});
// Token
export const IGX_TREE_COMPONENT = /*@__PURE__*/ new InjectionToken('IgxTreeToken');
export const IGX_TREE_NODE_COMPONENT = /*@__PURE__*/ new InjectionToken('IgxTreeNodeToken');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL3RyZWUvY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBNEIsY0FBYyxFQUEwQixNQUFNLGVBQWUsQ0FBQztBQUVqRyxPQUFPLEVBQW1ELE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQXFHeEYsUUFBUTtBQUNSLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLGFBQWEsQ0FBQSxNQUFNLENBQUM7SUFDcEQsSUFBSSxFQUFFLE1BQU07SUFDWixPQUFPLEVBQUUsU0FBUztJQUNsQixTQUFTLEVBQUUsV0FBVztDQUN6QixDQUFDLENBQUM7QUFHSCxRQUFRO0FBQ1IsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsYUFBYSxDQUFBLElBQUksY0FBYyxDQUFVLGNBQWMsQ0FBQyxDQUFDO0FBQzNGLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLGFBQWEsQ0FBQSxJQUFJLGNBQWMsQ0FBbUIsa0JBQWtCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5qZWN0aW9uVG9rZW4sIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERpc3BsYXlEZW5zaXR5IH0gZnJvbSAnLi4vY29yZS9kZW5zaXR5JztcbmltcG9ydCB7IElCYXNlQ2FuY2VsYWJsZUJyb3dzZXJFdmVudEFyZ3MsIElCYXNlRXZlbnRBcmdzLCBta2VudW0gfSBmcm9tICcuLi9jb3JlL3V0aWxzJztcbmltcG9ydCB7IFRvZ2dsZUFuaW1hdGlvblNldHRpbmdzIH0gZnJvbSAnLi4vZXhwYW5zaW9uLXBhbmVsL3RvZ2dsZS1hbmltYXRpb24tY29tcG9uZW50JztcblxuLy8gQ29tcG9uZW50IGludGVyZmFjZXNcblxuLyoqIENvbXBhcmVyIGZ1bmN0aW9uIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiBzZWFyY2hpbmcgdGhyb3VnaCBJZ3hUcmVlTm9kZTxhbnk+W10gKi9cbmV4cG9ydCB0eXBlIElneFRyZWVTZWFyY2hSZXNvbHZlciA9IChkYXRhOiBhbnksIG5vZGU6IElneFRyZWVOb2RlPGFueT4pID0+IGJvb2xlYW47XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWd4VHJlZSB7XG4gICAgLyoqIEBoaWRkZW4gQGludGVybmFsICovXG4gICAgbm9kZXM6IFF1ZXJ5TGlzdDxJZ3hUcmVlTm9kZTxhbnk+PjtcbiAgICAvKiogQGhpZGRlbiBAaW50ZXJuYWwgKi9cbiAgICByb290Tm9kZXM6IElneFRyZWVOb2RlPGFueT5bXTtcbiAgICBzaW5nbGVCcmFuY2hFeHBhbmQ6IGJvb2xlYW47XG4gICAgdG9nZ2xlTm9kZU9uQ2xpY2s6IGJvb2xlYW47XG4gICAgc2VsZWN0aW9uOiBJZ3hUcmVlU2VsZWN0aW9uVHlwZTtcbiAgICBleHBhbmRJbmRpY2F0b3I6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgYW5pbWF0aW9uU2V0dGluZ3M6IFRvZ2dsZUFuaW1hdGlvblNldHRpbmdzO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGRpc3BsYXlEZW5zaXR5OiBEaXNwbGF5RGVuc2l0eTtcbiAgICAvKiogQGhpZGRlbiBAaW50ZXJuYWwgKi9cbiAgICBmb3JjZVNlbGVjdDogSWd4VHJlZU5vZGU8YW55PltdO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGRpc2FibGVkQ2hhbmdlOiBFdmVudEVtaXR0ZXI8SWd4VHJlZU5vZGU8YW55Pj47XG4gICAgLyoqIEBoaWRkZW4gQGludGVybmFsICovXG4gICAgYWN0aXZlTm9kZUJpbmRpbmdDaGFuZ2U6IEV2ZW50RW1pdHRlcjxJZ3hUcmVlTm9kZTxhbnk+PjtcbiAgICBub2RlU2VsZWN0aW9uOiBFdmVudEVtaXR0ZXI8SVRyZWVOb2RlU2VsZWN0aW9uRXZlbnQ+O1xuICAgIG5vZGVFeHBhbmRpbmc6IEV2ZW50RW1pdHRlcjxJVHJlZU5vZGVUb2dnbGluZ0V2ZW50QXJncz47XG4gICAgbm9kZUV4cGFuZGVkOiBFdmVudEVtaXR0ZXI8SVRyZWVOb2RlVG9nZ2xlZEV2ZW50QXJncz47XG4gICAgbm9kZUNvbGxhcHNpbmc6IEV2ZW50RW1pdHRlcjxJVHJlZU5vZGVUb2dnbGluZ0V2ZW50QXJncz47XG4gICAgbm9kZUNvbGxhcHNlZDogRXZlbnRFbWl0dGVyPElUcmVlTm9kZVRvZ2dsZWRFdmVudEFyZ3M+O1xuICAgIGFjdGl2ZU5vZGVDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8SWd4VHJlZU5vZGU8YW55Pj47XG4gICAgZXhwYW5kQWxsKG5vZGVzOiBJZ3hUcmVlTm9kZTxhbnk+W10pOiB2b2lkO1xuICAgIGNvbGxhcHNlQWxsKG5vZGVzOiBJZ3hUcmVlTm9kZTxhbnk+W10pOiB2b2lkO1xuICAgIGRlc2VsZWN0QWxsKG5vZGU/OiBJZ3hUcmVlTm9kZTxhbnk+W10pOiB2b2lkO1xuICAgIGZpbmROb2RlcyhzZWFyY2hUZXJtOiBhbnksIGNvbXBhcmVyPzogSWd4VHJlZVNlYXJjaFJlc29sdmVyKTogSWd4VHJlZU5vZGU8YW55PltdIHwgbnVsbDtcbn1cblxuLy8gSXRlbSBpbnRlcmZhY2VzXG5leHBvcnQgaW50ZXJmYWNlIElneFRyZWVOb2RlPFQ+IHtcbiAgICBwYXJlbnROb2RlPzogSWd4VHJlZU5vZGU8YW55PiB8IG51bGw7XG4gICAgbG9hZGluZzogYm9vbGVhbjtcbiAgICBwYXRoOiBJZ3hUcmVlTm9kZTxhbnk+W107XG4gICAgZXhwYW5kZWQ6IGJvb2xlYW4gfCBudWxsO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGluZGV0ZXJtaW5hdGU6IGJvb2xlYW47XG4gICAgc2VsZWN0ZWQ6IGJvb2xlYW4gfCBudWxsO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGlzRm9jdXNlZDogYm9vbGVhbjtcbiAgICBhY3RpdmU6IGJvb2xlYW47XG4gICAgbGV2ZWw6IG51bWJlcjtcbiAgICBkYXRhOiBUO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIG5hdGl2ZUVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGhlYWRlcjogRWxlbWVudFJlZjtcbiAgICAvKiogQGhpZGRlbiBAaW50ZXJuYWwgKi9cbiAgICB0YWJJbmRleDogbnVtYmVyO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGFsbENoaWxkcmVuOiBRdWVyeUxpc3Q8SWd4VHJlZU5vZGU8YW55Pj47XG4gICAgLyoqIEBoaWRkZW4gQGludGVybmFsICovXG4gICAgX2NoaWxkcmVuOiBRdWVyeUxpc3Q8SWd4VHJlZU5vZGU8YW55Pj4gfCBudWxsO1xuICAgIHNlbGVjdGVkQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgZXhwYW5kZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBleHBhbmQoKTogdm9pZDtcbiAgICBjb2xsYXBzZSgpOiB2b2lkO1xuICAgIHRvZ2dsZSgpOiB2b2lkO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGFkZExpbmtDaGlsZChub2RlOiBhbnkpOiB2b2lkO1xuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIHJlbW92ZUxpbmtDaGlsZChub2RlOiBhbnkpOiB2b2lkO1xufVxuXG4vLyBFdmVudHNcbmV4cG9ydCBpbnRlcmZhY2UgSVRyZWVOb2RlU2VsZWN0aW9uRXZlbnQgZXh0ZW5kcyBJQmFzZUNhbmNlbGFibGVCcm93c2VyRXZlbnRBcmdzIHtcbiAgICBvbGRTZWxlY3Rpb246IElneFRyZWVOb2RlPGFueT5bXTtcbiAgICBuZXdTZWxlY3Rpb246IElneFRyZWVOb2RlPGFueT5bXTtcbiAgICBhZGRlZDogSWd4VHJlZU5vZGU8YW55PltdO1xuICAgIHJlbW92ZWQ6IElneFRyZWVOb2RlPGFueT5bXTtcbiAgICBldmVudD86IEV2ZW50O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElUcmVlTm9kZUVkaXRpbmdFdmVudCBleHRlbmRzIElCYXNlQ2FuY2VsYWJsZUJyb3dzZXJFdmVudEFyZ3Mge1xuICAgIG5vZGU6IElneFRyZWVOb2RlPGFueT47XG4gICAgdmFsdWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJVHJlZU5vZGVFZGl0ZWRFdmVudCBleHRlbmRzIElCYXNlRXZlbnRBcmdzIHtcbiAgICBub2RlOiBJZ3hUcmVlTm9kZTxhbnk+O1xuICAgIHZhbHVlOiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVRyZWVOb2RlVG9nZ2xpbmdFdmVudEFyZ3MgZXh0ZW5kcyBJQmFzZUV2ZW50QXJncywgSUJhc2VDYW5jZWxhYmxlQnJvd3NlckV2ZW50QXJncyB7XG4gICAgbm9kZTogSWd4VHJlZU5vZGU8YW55Pjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJVHJlZU5vZGVUb2dnbGVkRXZlbnRBcmdzIGV4dGVuZHMgSUJhc2VFdmVudEFyZ3Mge1xuICAgIG5vZGU6IElneFRyZWVOb2RlPGFueT47XG59XG5cbi8vIEVudW1zXG5leHBvcnQgY29uc3QgSWd4VHJlZVNlbGVjdGlvblR5cGUgPSAvKkBfX1BVUkVfXyovbWtlbnVtKHtcbiAgICBOb25lOiAnTm9uZScsXG4gICAgQmlTdGF0ZTogJ0JpU3RhdGUnLFxuICAgIENhc2NhZGluZzogJ0Nhc2NhZGluZydcbn0pO1xuZXhwb3J0IHR5cGUgSWd4VHJlZVNlbGVjdGlvblR5cGUgPSAodHlwZW9mIElneFRyZWVTZWxlY3Rpb25UeXBlKVtrZXlvZiB0eXBlb2YgSWd4VHJlZVNlbGVjdGlvblR5cGVdO1xuXG4vLyBUb2tlblxuZXhwb3J0IGNvbnN0IElHWF9UUkVFX0NPTVBPTkVOVCA9IC8qQF9fUFVSRV9fKi9uZXcgSW5qZWN0aW9uVG9rZW48SWd4VHJlZT4oJ0lneFRyZWVUb2tlbicpO1xuZXhwb3J0IGNvbnN0IElHWF9UUkVFX05PREVfQ09NUE9ORU5UID0gLypAX19QVVJFX18qL25ldyBJbmplY3Rpb25Ub2tlbjxJZ3hUcmVlTm9kZTxhbnk+PignSWd4VHJlZU5vZGVUb2tlbicpO1xuIl19