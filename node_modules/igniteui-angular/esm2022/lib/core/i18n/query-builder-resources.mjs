export const QueryBuilderResourceStringsEN = {
    igx_query_builder_date_placeholder: 'Pick up date',
    igx_query_builder_time_placeholder: 'Pick up time',
    igx_query_builder_filter_operator_and: 'And',
    igx_query_builder_filter_operator_or: 'Or',
    igx_query_builder_filter_contains: 'Contains',
    igx_query_builder_filter_doesNotContain: 'Does Not Contain',
    igx_query_builder_filter_startsWith: 'Starts With',
    igx_query_builder_filter_endsWith: 'Ends With',
    igx_query_builder_filter_equals: 'Equals',
    igx_query_builder_filter_doesNotEqual: 'Does Not Equal',
    igx_query_builder_filter_empty: 'Empty',
    igx_query_builder_filter_notEmpty: 'Not Empty',
    igx_query_builder_filter_null: 'Null',
    igx_query_builder_filter_notNull: 'Not Null',
    igx_query_builder_filter_before: 'Before',
    igx_query_builder_filter_after: 'After',
    igx_query_builder_filter_at: 'At',
    igx_query_builder_filter_not_at: 'Not At',
    igx_query_builder_filter_at_before: 'At or Before',
    igx_query_builder_filter_at_after: 'At or After',
    igx_query_builder_filter_today: 'Today',
    igx_query_builder_filter_yesterday: 'Yesterday',
    igx_query_builder_filter_thisMonth: 'This Month',
    igx_query_builder_filter_lastMonth: 'Last Month',
    igx_query_builder_filter_nextMonth: 'Next Month',
    igx_query_builder_filter_thisYear: 'This Year',
    igx_query_builder_filter_lastYear: 'Last Year',
    igx_query_builder_filter_nextYear: 'Next Year',
    igx_query_builder_filter_greaterThan: 'Greater Than',
    igx_query_builder_filter_lessThan: 'Less Than',
    igx_query_builder_filter_greaterThanOrEqualTo: 'Greater Than Or Equal To',
    igx_query_builder_filter_lessThanOrEqualTo: 'Less Than Or Equal To',
    igx_query_builder_filter_true: 'True',
    igx_query_builder_filter_false: 'False',
    igx_query_builder_filter_all: 'All',
    igx_query_builder_title: 'Query Builder',
    igx_query_builder_and_group: '"And" Group',
    igx_query_builder_or_group: '"Or" Group',
    igx_query_builder_end_group: 'End Group',
    igx_query_builder_and_label: 'and',
    igx_query_builder_or_label: 'or',
    igx_query_builder_add_condition: 'Condition',
    igx_query_builder_create_and_group: 'Create "And" Group',
    igx_query_builder_create_or_group: 'Create "Or" Group',
    igx_query_builder_ungroup: 'Ungroup',
    igx_query_builder_delete: 'Delete',
    igx_query_builder_delete_filters: 'Delete filters',
    igx_query_builder_initial_text: 'Start with creating a group of conditions linked with "And" or "Or"',
    igx_query_builder_column_placeholder: 'Select column',
    igx_query_builder_condition_placeholder: 'Select filter',
    igx_query_builder_value_placeholder: 'Value',
};
//# sourceMappingURL=data:application/json;base64,