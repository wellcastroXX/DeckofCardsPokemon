import { InjectionToken, EventEmitter, DoCheck, OnInit, ElementRef } from '@angular/core';
import { IBaseEventArgs } from './utils';
import * as i0 from "@angular/core";
/**
 * Defines the possible values of the components' display density.
 */
export declare const DisplayDensity: {
    comfortable: "comfortable";
    cosy: "cosy";
    compact: "compact";
};
/**
 * @deprecated since version 16.1.0.
 * Please use the `--ig-size` CSS custom property.
 * @see {@link [Update Guide](https://www.infragistics.com/products/ignite-ui-angular/angular/components/general/update-guide#from-160x-to-161x)}
 */
export type DisplayDensity = (typeof DisplayDensity)[keyof typeof DisplayDensity];
/**
 * Describes the object used to configure the DisplayDensity in Angular DI.
 *
 * @deprecated since version 16.1.0. Please use the `--ig-size` CSS custom property.
 */
export interface IDisplayDensityOptions {
    displayDensity: DisplayDensity;
}
export interface IDensityChangedEventArgs extends IBaseEventArgs {
    oldDensity: DisplayDensity;
    newDensity: DisplayDensity;
}
/**
 * Defines the DisplayDensity DI token.
 *
 * @deprecated since version 16.1.0.
 * Please use the `--ig-size` CSS custom property.
 * @see {@link [Update Guide](https://www.infragistics.com/products/ignite-ui-angular/angular/components/general/update-guide#from-160x-to-161x)}
 *
 * @hidden
 */
export declare const DisplayDensityToken: InjectionToken<IDisplayDensityOptions>;
/**
 * @hidden
 * Base class containing all logic required for implementing DisplayDensity.
 */
export declare class DisplayDensityBase implements DoCheck, OnInit {
    protected displayDensityOptions: IDisplayDensityOptions;
    protected _host: ElementRef;
    densityChanged: EventEmitter<IDensityChangedEventArgs>;
    /**
     * Returns the theme of the component.
     * The default theme is `comfortable`.
     * Available options are `comfortable`, `cosy`, `compact`.
     * ```typescript
     * let componentTheme = this.component.displayDensity;
     * ```
     *
     * @deprecated since version 16.1.0.
     * Please use the `--ig-size` CSS custom property.
     * @see {@link [Update Guide](https://www.infragistics.com/products/ignite-ui-angular/angular/components/general/update-guide#from-160x-to-161x)}
     */
    get displayDensity(): DisplayDensity;
    /**
     * Sets the theme of the component.
     */
    set displayDensity(val: DisplayDensity);
    /**
     * @hidden
     */
    initialDensity: DisplayDensity;
    protected oldDisplayDensityOptions: IDisplayDensityOptions;
    protected _displayDensity: DisplayDensity;
    constructor(displayDensityOptions: IDisplayDensityOptions, _host: ElementRef);
    /**
     * @hidden
     */
    ngOnInit(): void;
    /** @hidden @internal **/
    ngDoCheck(): void;
    /**
     * Given a style class of a component/element returns the modified version of it based
     * on the current display density.
     */
    protected getComponentDensityClass(baseStyleClass: string): string;
    /**
     * Sets the `--component-size` CSS variable based on the value of Display Density
     */
    getComponentSizeStyles(): "var(--ig-size, var(--ig-size-small))" | "var(--ig-size, var(--ig-size-medium))" | "var(--ig-size, var(--ig-size-large))";
    static ɵfac: i0.ɵɵFactoryDeclaration<DisplayDensityBase, [{ optional: true; }, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DisplayDensityBase, "[igxDisplayDensityBase]", never, { "displayDensity": { "alias": "displayDensity"; "required": false; }; }, { "densityChanged": "densityChanged"; }, never, never, true, never>;
}
