import { ElementRef, ChangeDetectorRef, OnDestroy, AfterViewInit, NgZone } from '@angular/core';
import { Subject } from 'rxjs';
import { PlatformUtil } from '../../core/utils';
import * as i0 from "@angular/core";
export declare class VirtualHelperBaseDirective implements OnDestroy, AfterViewInit {
    elementRef: ElementRef<HTMLElement>;
    cdr: ChangeDetectorRef;
    protected _zone: NgZone;
    document: any;
    protected platformUtil: PlatformUtil;
    scrollAmount: number;
    _size: number;
    destroyed: any;
    protected destroy$: Subject<any>;
    private _afterViewInit;
    private _scrollNativeSize;
    private _detached;
    constructor(elementRef: ElementRef<HTMLElement>, cdr: ChangeDetectorRef, _zone: NgZone, document: any, platformUtil: PlatformUtil);
    onScroll(event: any): void;
    ngAfterViewInit(): void;
    get nativeElement(): HTMLElement;
    ngOnDestroy(): void;
    calculateScrollNativeSize(): number;
    set size(value: number);
    get size(): number;
    get scrollNativeSize(): number;
    protected get isAttachedToDom(): boolean;
    protected handleMutations(event: any): void;
    protected restoreScroll(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<VirtualHelperBaseDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<VirtualHelperBaseDirective, "[igxVirtualHelperBase]", never, {}, {}, never, never, true, never>;
}
