import { ElementRef, TemplateRef } from '@angular/core';
import { IgxSummaryOperand, IgxSummaryResult } from './grid-summary';
import { GridColumnDataType } from '../../data-operations/data-util';
import { ISelectionNode } from '../common/types';
import { ColumnType } from '../common/grid.interface';
import * as i0 from "@angular/core";
export declare class IgxSummaryCellComponent {
    private element;
    summaryResults: IgxSummaryResult[];
    column: ColumnType;
    firstCellIndentation: number;
    hasSummary: boolean;
    density: any;
    summaryFormatter: (summaryResult: IgxSummaryResult, summaryOperand: IgxSummaryOperand) => any;
    summaryTemplate: TemplateRef<any>;
    /** @hidden */
    active: boolean;
    rowIndex: number;
    constructor(element: ElementRef);
    get visibleColumnIndex(): number;
    get attrCellID(): string;
    activate(): void;
    protected get selectionNode(): ISelectionNode;
    get width(): string;
    get nativeElement(): any;
    get columnDatatype(): GridColumnDataType;
    get itemHeight(): number;
    /**
     * @hidden
     */
    get grid(): any;
    /**
     * @hidden @internal
     */
    get currencyCode(): string;
    /**
     * @hidden @internal
     */
    get currencySymbol(): string;
    translateSummary(summary: IgxSummaryResult): string;
    /**
     * @hidden @internal
     */
    formatSummaryResult(summary: IgxSummaryResult): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxSummaryCellComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxSummaryCellComponent, "igx-grid-summary-cell", never, { "summaryResults": { "alias": "summaryResults"; "required": false; }; "column": { "alias": "column"; "required": false; }; "firstCellIndentation": { "alias": "firstCellIndentation"; "required": false; }; "hasSummary": { "alias": "hasSummary"; "required": false; }; "density": { "alias": "density"; "required": false; }; "summaryFormatter": { "alias": "summaryFormatter"; "required": false; }; "summaryTemplate": { "alias": "summaryTemplate"; "required": false; }; "active": { "alias": "active"; "required": false; }; "rowIndex": { "alias": "rowIndex"; "required": false; }; }, {}, never, never, true, never>;
    static ngAcceptInputType_hasSummary: unknown;
}
