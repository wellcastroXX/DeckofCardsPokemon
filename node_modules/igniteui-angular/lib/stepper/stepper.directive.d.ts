import { ElementRef } from '@angular/core';
import { IgxStep } from './stepper.common';
import { IgxStepperService } from './stepper.service';
import * as i0 from "@angular/core";
/**
 * Allows a custom element to be added as an active step indicator.
 *
 * @igxModule IgxStepperModule
 * @igxTheme igx-stepper-theme
 * @igxKeywords stepper
 * @igxGroup Layouts
 *
 * @example
 * <igx-stepper>
 *     <ng-template igxStepActiveIndicator>
 *          <igx-icon>edit</igx-icon>
 *       </ng-template>
 * </igx-stepper>
 */
export declare class IgxStepActiveIndicatorDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxStepActiveIndicatorDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxStepActiveIndicatorDirective, "[igxStepActiveIndicator]", never, {}, {}, never, never, true, never>;
}
/**
 * Allows a custom element to be added as a complete step indicator.
 *
 * @igxModule IgxStepperModule
 * @igxTheme igx-stepper-theme
 * @igxKeywords stepper
 * @igxGroup Layouts
 *
 * @example
 * <igx-stepper>
 *     <ng-template igxStepCompletedIndicator>
 *          <igx-icon>check</igx-icon>
 *       </ng-template>
 * </igx-stepper>
 */
export declare class IgxStepCompletedIndicatorDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxStepCompletedIndicatorDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxStepCompletedIndicatorDirective, "[igxStepCompletedIndicator]", never, {}, {}, never, never, true, never>;
}
/**
 * Allows a custom element to be added as an invalid step indicator.
 *
 * @igxModule IgxStepperModule
 * @igxTheme igx-stepper-theme
 * @igxKeywords stepper
 * @igxGroup Layouts
 *
 * @example
 * <igx-stepper>
 *     <ng-template igxStepInvalidIndicator>
 *          <igx-icon>error</igx-icon>
 *       </ng-template>
 * </igx-stepper>
 */
export declare class IgxStepInvalidIndicatorDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxStepInvalidIndicatorDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxStepInvalidIndicatorDirective, "[igxStepInvalidIndicator]", never, {}, {}, never, never, true, never>;
}
/**
 * Allows a custom element to be added as a step indicator.
 *
 * @igxModule IgxStepperModule
 * @igxTheme igx-stepper-theme
 * @igxKeywords stepper
 * @igxGroup Layouts
 *
 * @example
 * <igx-stepper>
 *     <igx-step>
 *         <igx-icon igxStepIndicator>home</igx-icon>
 *     </igx-step>
 * </igx-stepper>
 */
export declare class IgxStepIndicatorDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxStepIndicatorDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxStepIndicatorDirective, "[igxStepIndicator]", never, {}, {}, never, never, true, never>;
}
/**
 * Allows a custom element to be added as a step title.
 *
 * @igxModule IgxStepperModule
 * @igxTheme igx-stepper-theme
 * @igxKeywords stepper
 * @igxGroup Layouts
 *
 * @example
 * <igx-stepper>
 *     <igx-step>
 *         <p igxStepTitle>Home</p>
 *     </igx-step>
 * </igx-stepper>
 */
export declare class IgxStepTitleDirective {
    defaultClass: boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxStepTitleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxStepTitleDirective, "[igxStepTitle]", never, {}, {}, never, never, true, never>;
}
/**
 * Allows a custom element to be added as a step subtitle.
 *
 * @igxModule IgxStepperModule
 * @igxTheme igx-stepper-theme
 * @igxKeywords stepper
 * @igxGroup Layouts
 *
 * @example
 * <igx-stepper>
 *     <igx-step>
 *         <p igxStepSubtitle>Home Subtitle</p>
 *     </igx-step>
 * </igx-stepper>
 */
export declare class IgxStepSubtitleDirective {
    defaultClass: boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxStepSubtitleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxStepSubtitleDirective, "[igxStepSubtitle]", never, {}, {}, never, never, true, never>;
}
/**
 * Allows a custom element to be added as a step content.
 *
 * @igxModule IgxStepperModule
 * @igxTheme igx-stepper-theme
 * @igxKeywords stepper
 * @igxGroup Layouts
 *
 * @example
 * <igx-stepper>
 *     <igx-step>
 *         <div igxStepContent>...</div>
 *     </igx-step>
 * </igx-stepper>
 */
export declare class IgxStepContentDirective {
    private step;
    private stepperService;
    elementRef: ElementRef<HTMLElement>;
    private get target();
    defaultClass: boolean;
    role: string;
    get stepId(): string;
    id: string;
    get tabIndex(): number;
    set tabIndex(val: number);
    private _tabIndex;
    constructor(step: IgxStep, stepperService: IgxStepperService, elementRef: ElementRef<HTMLElement>);
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxStepContentDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxStepContentDirective, "[igxStepContent]", never, { "id": { "alias": "id"; "required": false; }; "tabIndex": { "alias": "tabIndex"; "required": false; }; }, {}, never, never, true, never>;
}
